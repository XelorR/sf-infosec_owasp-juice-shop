{
  "errors": [
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/weakPasswordChallenge_2.ts:1:\n `User.init(\n      password: {\n        type: DataTypes.STRING,\n        set (clearTextPassword: string) {\n          validatePasswordHasAtLeastOneNumber(clearTextPassword)\n          validatePasswordHasAtLeastOneSpecialChar(clearTextPassword)\n          validatePasswordHasAtLeastOneUpperCaseChar(clearTextPassword)\n          validatePasswordHasAtLeastOneLowerCaseChar(clearTextPassword)\n          validatePasswordHasAtLeastTenChar(clearTextPassword)\n          validatePasswordIsNotInTopOneMillionCommonPasswordsList(clearTextPassword)\n          this.setDataValue('password', security.hash(clearTextPassword))\n        }\n      },` was unexpected",
      "path": "data/static/codefixes/weakPasswordChallenge_2.ts",
      "spans": [
        {
          "end": {
            "col": 9,
            "line": 13,
            "offset": 622
          },
          "file": "data/static/codefixes/weakPasswordChallenge_2.ts",
          "start": {
            "col": 1,
            "line": 1,
            "offset": 0
          }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": {
              "col": 9,
              "line": 13,
              "offset": 622
            },
            "path": "data/static/codefixes/weakPasswordChallenge_2.ts",
            "start": {
              "col": 1,
              "line": 1,
              "offset": 0
            }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/loginJimChallenge_3.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = ? AND password = ? AND deletedAt IS NULL`,\n      { replacements: [ req.body.email, req.body.password ], model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected",
      "path": "data/static/codefixes/loginJimChallenge_3.ts",
      "type": "Syntax error"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/loginBenderChallenge_4.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = '${req.body.email || ''}' AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`, { model: models.User, plain: false })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected",
      "path": "data/static/codefixes/loginBenderChallenge_4.ts",
      "type": "Syntax error"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/tokenSaleChallenge_2.ts:19:\n `]` was unexpected",
      "path": "data/static/codefixes/tokenSaleChallenge_2.ts",
      "spans": [
        {
          "end": {
            "col": 2,
            "line": 19,
            "offset": 1
          },
          "file": "data/static/codefixes/tokenSaleChallenge_2.ts",
          "start": {
            "col": 1,
            "line": 19,
            "offset": 0
          }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": {
              "col": 2,
              "line": 19,
              "offset": 1
            },
            "path": "data/static/codefixes/tokenSaleChallenge_2.ts",
            "start": {
              "col": 1,
              "line": 19,
              "offset": 0
            }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line frontend/src/app/privacy-policy/privacy-policy.component.html:57:\n `& Cookies Data` was unexpected",
      "path": "frontend/src/app/privacy-policy/privacy-policy.component.html",
      "spans": [
        {
          "end": {
            "col": 37,
            "line": 57,
            "offset": 14
          },
          "file": "frontend/src/app/privacy-policy/privacy-policy.component.html",
          "start": {
            "col": 23,
            "line": 57,
            "offset": 0
          }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": {
              "col": 37,
              "line": 57,
              "offset": 14
            },
            "path": "frontend/src/app/privacy-policy/privacy-policy.component.html",
            "start": {
              "col": 23,
              "line": 57,
              "offset": 0
            }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/tokenSaleChallenge_3_correct.ts:14:\n `]` was unexpected",
      "path": "data/static/codefixes/tokenSaleChallenge_3_correct.ts",
      "spans": [
        {
          "end": {
            "col": 2,
            "line": 14,
            "offset": 1
          },
          "file": "data/static/codefixes/tokenSaleChallenge_3_correct.ts",
          "start": {
            "col": 1,
            "line": 14,
            "offset": 0
          }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": {
              "col": 2,
              "line": 14,
              "offset": 1
            },
            "path": "data/static/codefixes/tokenSaleChallenge_3_correct.ts",
            "start": {
              "col": 1,
              "line": 14,
              "offset": 0
            }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/loginJimChallenge_2.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = '${req.body.email || ''}' AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`, { model: models.User, plain: false })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected",
      "path": "data/static/codefixes/loginJimChallenge_2.ts",
      "type": "Syntax error"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/loginJimChallenge_1_correct.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = $1 AND password = $2 AND deletedAt IS NULL`,\n      { bind: [ req.body.email, security.hash(req.body.password) ], model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected",
      "path": "data/static/codefixes/loginJimChallenge_1_correct.ts",
      "type": "Syntax error"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/loginAdminChallenge_2.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = $1 AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`,\n      { bind: [ req.body.email ], model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected",
      "path": "data/static/codefixes/loginAdminChallenge_2.ts",
      "type": "Syntax error"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/loginBenderChallenge_2_correct.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = $mail AND password = $pass AND deletedAt IS NULL`,\n      { bind: { mail: req.body.email, pass: security.hash(req.body.password) }, model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected",
      "path": "data/static/codefixes/loginBenderChallenge_2_correct.ts",
      "type": "Syntax error"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/loginBenderChallenge_3.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = :mail AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`,\n      { replacements: { mail: req.body.email }, model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected",
      "path": "data/static/codefixes/loginBenderChallenge_3.ts",
      "type": "Syntax error"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/restfulXssChallenge_3.ts:43:\n `: any[]` was unexpected",
      "path": "data/static/codefixes/restfulXssChallenge_3.ts",
      "spans": [
        {
          "end": {
            "col": 44,
            "line": 43,
            "offset": 7
          },
          "file": "data/static/codefixes/restfulXssChallenge_3.ts",
          "start": {
            "col": 37,
            "line": 43,
            "offset": 0
          }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": {
              "col": 44,
              "line": 43,
              "offset": 7
            },
            "path": "data/static/codefixes/restfulXssChallenge_3.ts",
            "start": {
              "col": 37,
              "line": 43,
              "offset": 0
            }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/loginJimChallenge_4.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    if (req.body.email.match(/.*['-;].*/) || req.body.password.match(/.*['-;].*/)) {\n      res.status(451).send(res.__('SQL Injection detected.'))\n    }\n    models.sequelize.query(`SELECT * FROM Users WHERE email = '${req.body.email || ''}' AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`, { model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected",
      "path": "data/static/codefixes/loginJimChallenge_4.ts",
      "type": "Syntax error"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/weakPasswordChallenge_4.ts:1:\n `User.init(\n      password: {\n        type: DataTypes.STRING,\n        set (clearTextPassword: string) {\n          validatePasswordIsNotInTopOneMillionCommonPasswordsList(clearTextPassword)\n          this.setDataValue('password', security.hash(clearTextPassword))\n        }\n      },` was unexpected",
      "path": "data/static/codefixes/weakPasswordChallenge_4.ts",
      "spans": [
        {
          "end": {
            "col": 9,
            "line": 8,
            "offset": 280
          },
          "file": "data/static/codefixes/weakPasswordChallenge_4.ts",
          "start": {
            "col": 1,
            "line": 1,
            "offset": 0
          }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": {
              "col": 9,
              "line": 8,
              "offset": 280
            },
            "path": "data/static/codefixes/weakPasswordChallenge_4.ts",
            "start": {
              "col": 1,
              "line": 1,
              "offset": 0
            }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/weakPasswordChallenge_1_correct.ts:1:\n `User.init(\n      password: {\n        type: DataTypes.STRING,\n        set (clearTextPassword: string) {\n          validatePasswordHasAtLeastTenChar(clearTextPassword)\n          validatePasswordIsNotInTopOneMillionCommonPasswordsList(clearTextPassword)\n          this.setDataValue('password', security.hash(clearTextPassword))\n        }\n      },` was unexpected",
      "path": "data/static/codefixes/weakPasswordChallenge_1_correct.ts",
      "spans": [
        {
          "end": {
            "col": 9,
            "line": 9,
            "offset": 343
          },
          "file": "data/static/codefixes/weakPasswordChallenge_1_correct.ts",
          "start": {
            "col": 1,
            "line": 1,
            "offset": 0
          }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": {
              "col": 9,
              "line": 9,
              "offset": 343
            },
            "path": "data/static/codefixes/weakPasswordChallenge_1_correct.ts",
            "start": {
              "col": 1,
              "line": 1,
              "offset": 0
            }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/weakPasswordChallenge_3.ts:1:\n `User.init(\n      password: {\n        type: DataTypes.STRING,\n        set (clearTextPassword: string) {\n          validatePasswordHasAtLeastOneNumber(clearTextPassword)\n          validatePasswordHasAtLeastOneSpecialChar(clearTextPassword)\n          validatePasswordHasAtLeastOneUpperCaseChar(clearTextPassword)\n          validatePasswordHasAtLeastOneLowerCaseChar(clearTextPassword)\n          validatePasswordHasAtLeastTenChar(clearTextPassword)\n          this.setDataValue('password', security.hash(clearTextPassword))\n        }\n      },` was unexpected",
      "path": "data/static/codefixes/weakPasswordChallenge_3.ts",
      "spans": [
        {
          "end": {
            "col": 9,
            "line": 12,
            "offset": 537
          },
          "file": "data/static/codefixes/weakPasswordChallenge_3.ts",
          "start": {
            "col": 1,
            "line": 1,
            "offset": 0
          }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": {
              "col": 9,
              "line": 12,
              "offset": 537
            },
            "path": "data/static/codefixes/weakPasswordChallenge_3.ts",
            "start": {
              "col": 1,
              "line": 1,
              "offset": 0
            }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/loginAdminChallenge_3.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = $1 AND password = $2 AND deletedAt IS NULL`,\n      { bind: [ req.body.email, req.body.password ], model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected",
      "path": "data/static/codefixes/loginAdminChallenge_3.ts",
      "type": "Syntax error"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/loginAdminChallenge_4_correct.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = $1 AND password = $2 AND deletedAt IS NULL`,\n      { bind: [ req.body.email, security.hash(req.body.password) ], model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected",
      "path": "data/static/codefixes/loginAdminChallenge_4_correct.ts",
      "type": "Syntax error"
    },
    {
      "code": 2,
      "level": "warn",
      "message": "Timeout when running javascript.express.security.injection.raw-html-format.raw-html-format on frontend/src/assets/private/three.js:\n ",
      "path": "frontend/src/assets/private/three.js",
      "rule_id": "javascript.express.security.injection.raw-html-format.raw-html-format",
      "type": "Timeout"
    },
    {
      "code": 2,
      "level": "warn",
      "message": "Timeout when running typescript.react.security.audit.react-unsanitized-method.react-unsanitized-method on frontend/src/assets/private/three.js:\n ",
      "path": "frontend/src/assets/private/three.js",
      "rule_id": "typescript.react.security.audit.react-unsanitized-method.react-unsanitized-method",
      "type": "Timeout"
    },
    {
      "code": 2,
      "level": "warn",
      "message": "Timeout when running typescript.react.security.audit.react-unsanitized-property.react-unsanitized-property on frontend/src/assets/private/three.js:\n ",
      "path": "frontend/src/assets/private/three.js",
      "rule_id": "typescript.react.security.audit.react-unsanitized-property.react-unsanitized-property",
      "type": "Timeout"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/tokenSaleChallenge_1.ts:18:\n `]` was unexpected",
      "path": "data/static/codefixes/tokenSaleChallenge_1.ts",
      "spans": [
        {
          "end": {
            "col": 2,
            "line": 18,
            "offset": 1
          },
          "file": "data/static/codefixes/tokenSaleChallenge_1.ts",
          "start": {
            "col": 1,
            "line": 18,
            "offset": 0
          }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": {
              "col": 2,
              "line": 18,
              "offset": 1
            },
            "path": "data/static/codefixes/tokenSaleChallenge_1.ts",
            "start": {
              "col": 1,
              "line": 18,
              "offset": 0
            }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/loginAdminChallenge_1.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    if (req.body.email.match(/.*['-;].*/) || req.body.password.match(/.*['-;].*/)) {\n      res.status(451).send(res.__('SQL Injection detected.'))\n    }\n    models.sequelize.query(`SELECT * FROM Users WHERE email = '${req.body.email || ''}' AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`, { model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected",
      "path": "data/static/codefixes/loginAdminChallenge_1.ts",
      "type": "Syntax error"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/loginBenderChallenge_1.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    if (req.body.email.match(/.*['-;].*/) || req.body.password.match(/.*['-;].*/)) {\n      res.status(451).send(res.__('SQL Injection detected.'))\n    }\n    models.sequelize.query(`SELECT * FROM Users WHERE email = '${req.body.email || ''}' AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`, { model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected",
      "path": "data/static/codefixes/loginBenderChallenge_1.ts",
      "type": "Syntax error"
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line data/static/codefixes/restfulXssChallenge_4.ts:57:\n `: any[]` was unexpected",
      "path": "data/static/codefixes/restfulXssChallenge_4.ts",
      "spans": [
        {
          "end": {
            "col": 44,
            "line": 57,
            "offset": 7
          },
          "file": "data/static/codefixes/restfulXssChallenge_4.ts",
          "start": {
            "col": 37,
            "line": 57,
            "offset": 0
          }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": {
              "col": 44,
              "line": 57,
              "offset": 7
            },
            "path": "data/static/codefixes/restfulXssChallenge_4.ts",
            "start": {
              "col": 37,
              "line": 57,
              "offset": 0
            }
          }
        ]
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "message": "Syntax error at line frontend/src/app/Services/user.service.ts:14:\n `new?:` was unexpected",
      "path": "frontend/src/app/Services/user.service.ts",
      "spans": [
        {
          "end": {
            "col": 8,
            "line": 14,
            "offset": 5
          },
          "file": "frontend/src/app/Services/user.service.ts",
          "start": {
            "col": 3,
            "line": 14,
            "offset": 0
          }
        }
      ],
      "type": [
        "PartialParsing",
        [
          {
            "end": {
              "col": 8,
              "line": 14,
              "offset": 5
            },
            "path": "frontend/src/app/Services/user.service.ts",
            "start": {
              "col": 3,
              "line": 14,
              "offset": 0
            }
          }
        ]
      ]
    }
  ],
  "interfile_languages_used": [],
  "paths": {
    "scanned": [
      ".codeclimate.yml",
      ".dependabot/config.yml",
      ".devcontainer.json",
      ".dockerignore",
      ".eslintrc.js",
      ".github/CODEOWNERS",
      ".github/FUNDING.yml",
      ".github/ISSUE_TEMPLATE/bug-report.md",
      ".github/ISSUE_TEMPLATE/challenge-idea.md",
      ".github/ISSUE_TEMPLATE/config.yml",
      ".github/ISSUE_TEMPLATE/feature-request.md",
      ".github/PULL_REQUEST_TEMPLATE.md",
      ".github/workflows/ci.yml",
      ".github/workflows/codeql-analysis.yml",
      ".github/workflows/lint-fixer.yml",
      ".github/workflows/lock.yml",
      ".github/workflows/rebase.yml",
      ".github/workflows/release.yml",
      ".github/workflows/stale.yml",
      ".github/workflows/update-challenges-www.yml",
      ".github/workflows/update-news-www.yml",
      ".github/workflows/zap_scan.yml",
      ".gitignore",
      ".gitlab/auto-deploy-values.yaml",
      ".gitlab-ci.yml",
      ".gitpod.yml",
      ".mailmap",
      ".npmrc",
      ".well-known/csaf/2017/juice-shop-sa-20200513-express-jwt.json",
      ".well-known/csaf/2017/juice-shop-sa-20200513-express-jwt.json.asc",
      ".well-known/csaf/2017/juice-shop-sa-20200513-express-jwt.json.sha512",
      ".well-known/csaf/2021/juice-shop-sa-20211014-proto.json",
      ".well-known/csaf/2021/juice-shop-sa-20211014-proto.json.asc",
      ".well-known/csaf/2021/juice-shop-sa-20211014-proto.json.sha512",
      ".well-known/csaf/2024/juice-shop-sa-disclaimer.json",
      ".well-known/csaf/2024/juice-shop-sa-disclaimer.json.asc",
      ".well-known/csaf/2024/juice-shop-sa-disclaimer.json.sha512",
      ".well-known/csaf/changes.csv",
      ".well-known/csaf/index.txt",
      ".well-known/csaf/provider-metadata.json",
      ".well-known/security.txt",
      ".zap/rules.tsv",
      "CODE_OF_CONDUCT.md",
      "CONTRIBUTING.md",
      "Dockerfile",
      "Gruntfile.js",
      "HALL_OF_FAME.md",
      "LICENSE",
      "README.md",
      "REFERENCES.md",
      "SECURITY.md",
      "SOLUTIONS.md",
      "app.json",
      "app.ts",
      "config/7ms.yml",
      "config/addo.yml",
      "config/bodgeit.yml",
      "config/ctf.yml",
      "config/default.yml",
      "config/fbctf.yml",
      "config/juicebox.yml",
      "config/mozilla.yml",
      "config/oss.yml",
      "config/quiet.yml",
      "config/test.yml",
      "config/tutorial.yml",
      "config/unsafe.yml",
      "config.schema.yml",
      "crowdin.yaml",
      "ctf.key",
      "cypress.config.ts",
      "data/chatbot/.gitkeep",
      "data/datacache.ts",
      "data/datacreator.ts",
      "data/mongodb.ts",
      "data/static/botDefaultTrainingData.json",
      "data/static/challenges.yml",
      "data/static/codefixes/.editorconfig",
      "data/static/codefixes/accessLogDisclosureChallenge.info.yml",
      "data/static/codefixes/accessLogDisclosureChallenge_1_correct.ts",
      "data/static/codefixes/accessLogDisclosureChallenge_2.ts",
      "data/static/codefixes/accessLogDisclosureChallenge_3.ts",
      "data/static/codefixes/accessLogDisclosureChallenge_4.ts",
      "data/static/codefixes/adminSectionChallenge.info.yml",
      "data/static/codefixes/adminSectionChallenge_1_correct.ts",
      "data/static/codefixes/adminSectionChallenge_2.ts",
      "data/static/codefixes/adminSectionChallenge_3.ts",
      "data/static/codefixes/adminSectionChallenge_4.ts",
      "data/static/codefixes/changeProductChallenge.info.yml",
      "data/static/codefixes/changeProductChallenge_1.ts",
      "data/static/codefixes/changeProductChallenge_2.ts",
      "data/static/codefixes/changeProductChallenge_3_correct.ts",
      "data/static/codefixes/changeProductChallenge_4.ts",
      "data/static/codefixes/dbSchemaChallenge.info.yml",
      "data/static/codefixes/dbSchemaChallenge_1.ts",
      "data/static/codefixes/dbSchemaChallenge_2_correct.ts",
      "data/static/codefixes/dbSchemaChallenge_3.ts",
      "data/static/codefixes/directoryListingChallenge.info.yml",
      "data/static/codefixes/directoryListingChallenge_1_correct.ts",
      "data/static/codefixes/directoryListingChallenge_2.ts",
      "data/static/codefixes/directoryListingChallenge_3.ts",
      "data/static/codefixes/directoryListingChallenge_4.ts",
      "data/static/codefixes/exposedMetricsChallenge.info.yml",
      "data/static/codefixes/exposedMetricsChallenge_1.ts",
      "data/static/codefixes/exposedMetricsChallenge_2.ts",
      "data/static/codefixes/exposedMetricsChallenge_3_correct.ts",
      "data/static/codefixes/forgedReviewChallenge.info.yml",
      "data/static/codefixes/forgedReviewChallenge_1.ts",
      "data/static/codefixes/forgedReviewChallenge_2_correct.ts",
      "data/static/codefixes/forgedReviewChallenge_3.ts",
      "data/static/codefixes/localXssChallenge.info.yml",
      "data/static/codefixes/localXssChallenge_1.ts",
      "data/static/codefixes/localXssChallenge_2_correct.ts",
      "data/static/codefixes/localXssChallenge_3.ts",
      "data/static/codefixes/localXssChallenge_4.ts",
      "data/static/codefixes/loginAdminChallenge.info.yml",
      "data/static/codefixes/loginAdminChallenge_1.ts",
      "data/static/codefixes/loginAdminChallenge_2.ts",
      "data/static/codefixes/loginAdminChallenge_3.ts",
      "data/static/codefixes/loginAdminChallenge_4_correct.ts",
      "data/static/codefixes/loginBenderChallenge.info.yml",
      "data/static/codefixes/loginBenderChallenge_1.ts",
      "data/static/codefixes/loginBenderChallenge_2_correct.ts",
      "data/static/codefixes/loginBenderChallenge_3.ts",
      "data/static/codefixes/loginBenderChallenge_4.ts",
      "data/static/codefixes/loginJimChallenge.info.yml",
      "data/static/codefixes/loginJimChallenge_1_correct.ts",
      "data/static/codefixes/loginJimChallenge_2.ts",
      "data/static/codefixes/loginJimChallenge_3.ts",
      "data/static/codefixes/loginJimChallenge_4.ts",
      "data/static/codefixes/nftMintChallenge.info.yml",
      "data/static/codefixes/nftMintChallenge_1.sol",
      "data/static/codefixes/nftMintChallenge_2.sol",
      "data/static/codefixes/nftMintChallenge_3.sol",
      "data/static/codefixes/nftMintChallenge_4_correct.sol",
      "data/static/codefixes/nftUnlockChallenge.info.yml",
      "data/static/codefixes/nftUnlockChallenge_1.sol",
      "data/static/codefixes/nftUnlockChallenge_2_correct.sol",
      "data/static/codefixes/nftUnlockChallenge_3.sol",
      "data/static/codefixes/nftUnlockChallenge_4.sol",
      "data/static/codefixes/noSqlReviewsChallenge.info.yml",
      "data/static/codefixes/noSqlReviewsChallenge_1.ts",
      "data/static/codefixes/noSqlReviewsChallenge_2.ts",
      "data/static/codefixes/noSqlReviewsChallenge_3_correct.ts",
      "data/static/codefixes/redirectChallenge.info.yml",
      "data/static/codefixes/redirectChallenge_1.ts",
      "data/static/codefixes/redirectChallenge_2.ts",
      "data/static/codefixes/redirectChallenge_3.ts",
      "data/static/codefixes/redirectChallenge_4_correct.ts",
      "data/static/codefixes/redirectCryptoCurrencyChallenge.info.yml",
      "data/static/codefixes/redirectCryptoCurrencyChallenge_1.ts",
      "data/static/codefixes/redirectCryptoCurrencyChallenge_2.ts",
      "data/static/codefixes/redirectCryptoCurrencyChallenge_3_correct.ts",
      "data/static/codefixes/redirectCryptoCurrencyChallenge_4.ts",
      "data/static/codefixes/registerAdminChallenge.info.yml",
      "data/static/codefixes/registerAdminChallenge_1.ts",
      "data/static/codefixes/registerAdminChallenge_2.ts",
      "data/static/codefixes/registerAdminChallenge_3_correct.ts",
      "data/static/codefixes/registerAdminChallenge_4.ts",
      "data/static/codefixes/resetPasswordBenderChallenge.info.yml",
      "data/static/codefixes/resetPasswordBenderChallenge_1.yml",
      "data/static/codefixes/resetPasswordBenderChallenge_2_correct.yml",
      "data/static/codefixes/resetPasswordBenderChallenge_3.yml",
      "data/static/codefixes/resetPasswordBjoernChallenge.info.yml",
      "data/static/codefixes/resetPasswordBjoernChallenge_1_correct.yml",
      "data/static/codefixes/resetPasswordBjoernChallenge_2.yml",
      "data/static/codefixes/resetPasswordBjoernChallenge_3.yml",
      "data/static/codefixes/resetPasswordBjoernOwaspChallenge.info.yml",
      "data/static/codefixes/resetPasswordBjoernOwaspChallenge_1.yml",
      "data/static/codefixes/resetPasswordBjoernOwaspChallenge_2_correct.yml",
      "data/static/codefixes/resetPasswordBjoernOwaspChallenge_3.yml",
      "data/static/codefixes/resetPasswordJimChallenge.info.yml",
      "data/static/codefixes/resetPasswordJimChallenge_1.yml",
      "data/static/codefixes/resetPasswordJimChallenge_2.yml",
      "data/static/codefixes/resetPasswordJimChallenge_3_correct.yml",
      "data/static/codefixes/resetPasswordMortyChallenge.info.yml",
      "data/static/codefixes/resetPasswordMortyChallenge_1.ts",
      "data/static/codefixes/resetPasswordMortyChallenge_2.ts",
      "data/static/codefixes/resetPasswordMortyChallenge_3.ts",
      "data/static/codefixes/resetPasswordMortyChallenge_4_correct.ts",
      "data/static/codefixes/resetPasswordUvoginChallenge.info.yml",
      "data/static/codefixes/resetPasswordUvoginChallenge_1.yml",
      "data/static/codefixes/resetPasswordUvoginChallenge_2.yml",
      "data/static/codefixes/resetPasswordUvoginChallenge_3_correct.yml",
      "data/static/codefixes/restfulXssChallenge.info.yml",
      "data/static/codefixes/restfulXssChallenge_1_correct.ts",
      "data/static/codefixes/restfulXssChallenge_2.ts",
      "data/static/codefixes/restfulXssChallenge_3.ts",
      "data/static/codefixes/restfulXssChallenge_4.ts",
      "data/static/codefixes/scoreBoardChallenge.info.yml",
      "data/static/codefixes/scoreBoardChallenge_1_correct.ts",
      "data/static/codefixes/scoreBoardChallenge_2.ts",
      "data/static/codefixes/scoreBoardChallenge_3.ts",
      "data/static/codefixes/tokenSaleChallenge.info.yml",
      "data/static/codefixes/tokenSaleChallenge_1.ts",
      "data/static/codefixes/tokenSaleChallenge_2.ts",
      "data/static/codefixes/tokenSaleChallenge_3_correct.ts",
      "data/static/codefixes/unionSqlInjectionChallenge.info.yml",
      "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
      "data/static/codefixes/unionSqlInjectionChallenge_2_correct.ts",
      "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
      "data/static/codefixes/weakPasswordChallenge.info.yml",
      "data/static/codefixes/weakPasswordChallenge_1_correct.ts",
      "data/static/codefixes/weakPasswordChallenge_2.ts",
      "data/static/codefixes/weakPasswordChallenge_3.ts",
      "data/static/codefixes/weakPasswordChallenge_4.ts",
      "data/static/codefixes/web3SandboxChallenge.info.yml",
      "data/static/codefixes/web3SandboxChallenge_1_correct.ts",
      "data/static/codefixes/web3SandboxChallenge_2.ts",
      "data/static/codefixes/web3SandboxChallenge_3.ts",
      "data/static/codefixes/web3WalletChallenge.info.yml",
      "data/static/codefixes/web3WalletChallenge_1.sol",
      "data/static/codefixes/web3WalletChallenge_2.sol",
      "data/static/codefixes/web3WalletChallenge_3_correct.sol",
      "data/static/codefixes/web3WalletChallenge_4.sol",
      "data/static/codefixes/xssBonusChallenge.info.yml",
      "data/static/codefixes/xssBonusChallenge_1_correct.ts",
      "data/static/codefixes/xssBonusChallenge_2.ts",
      "data/static/codefixes/xssBonusChallenge_3.ts",
      "data/static/codefixes/xssBonusChallenge_4.ts",
      "data/static/contractABIs.ts",
      "data/static/deliveries.yml",
      "data/static/i18n/ar_SA.json",
      "data/static/i18n/az_AZ.json",
      "data/static/i18n/bg_BG.json",
      "data/static/i18n/bn_BD.json",
      "data/static/i18n/ca_ES.json",
      "data/static/i18n/cs_CZ.json",
      "data/static/i18n/da_DK.json",
      "data/static/i18n/de_CH.json",
      "data/static/i18n/de_DE.json",
      "data/static/i18n/el_GR.json",
      "data/static/i18n/en.json",
      "data/static/i18n/es_ES.json",
      "data/static/i18n/et_EE.json",
      "data/static/i18n/fi_FI.json",
      "data/static/i18n/fr_FR.json",
      "data/static/i18n/ga_IE.json",
      "data/static/i18n/he_IL.json",
      "data/static/i18n/hi_IN.json",
      "data/static/i18n/hu_HU.json",
      "data/static/i18n/id_ID.json",
      "data/static/i18n/it_IT.json",
      "data/static/i18n/ja_JP.json",
      "data/static/i18n/ka_GE.json",
      "data/static/i18n/ko_KR.json",
      "data/static/i18n/lv_LV.json",
      "data/static/i18n/my_MM.json",
      "data/static/i18n/nl_NL.json",
      "data/static/i18n/no_NO.json",
      "data/static/i18n/pl_PL.json",
      "data/static/i18n/pt_BR.json",
      "data/static/i18n/pt_PT.json",
      "data/static/i18n/ro_RO.json",
      "data/static/i18n/ru_RU.json",
      "data/static/i18n/si_LK.json",
      "data/static/i18n/sv_SE.json",
      "data/static/i18n/th_TH.json",
      "data/static/i18n/tlh_AA.json",
      "data/static/i18n/tr_TR.json",
      "data/static/i18n/uk_UA.json",
      "data/static/i18n/zh_CN.json",
      "data/static/i18n/zh_HK.json",
      "data/static/i18n/zh_TW.json",
      "data/static/legal.md",
      "data/static/locales.json",
      "data/static/owasp_promo.vtt",
      "data/static/securityQuestions.yml",
      "data/static/users.yml",
      "data/static/web3-snippets/BEEToken.sol",
      "data/static/web3-snippets/BeeFaucet.sol",
      "data/static/web3-snippets/ETHWalletBank.sol",
      "data/static/web3-snippets/HoneyPotNFT.sol",
      "data/static/web3-snippets/JuiceShopSBT.sol",
      "data/staticData.ts",
      "data/types.ts",
      "docker-compose.test.yml",
      "encryptionkeys/jwt.pub",
      "encryptionkeys/premium.key",
      "frontend/.browserslistrc",
      "frontend/.editorconfig",
      "frontend/.eslintrc.js",
      "frontend/.gitignore",
      "frontend/.npmrc",
      "frontend/.stylelintrc.js",
      "frontend/angular.json",
      "frontend/package.json",
      "frontend/src/app/Models/backup.model.ts",
      "frontend/src/app/Models/challenge.model.ts",
      "frontend/src/app/Models/deliveryMethod.model.ts",
      "frontend/src/app/Models/product.model.ts",
      "frontend/src/app/Models/review.model.ts",
      "frontend/src/app/Models/securityQuestion.model.ts",
      "frontend/src/app/Services/address.service.spec.ts",
      "frontend/src/app/Services/address.service.ts",
      "frontend/src/app/Services/administration.service.spec.ts",
      "frontend/src/app/Services/administration.service.ts",
      "frontend/src/app/Services/basket.service.spec.ts",
      "frontend/src/app/Services/basket.service.ts",
      "frontend/src/app/Services/captcha.service.spec.ts",
      "frontend/src/app/Services/captcha.service.ts",
      "frontend/src/app/Services/challenge.service.spec.ts",
      "frontend/src/app/Services/challenge.service.ts",
      "frontend/src/app/Services/chatbot.service.spec.ts",
      "frontend/src/app/Services/chatbot.service.ts",
      "frontend/src/app/Services/code-fixes.service.spec.ts",
      "frontend/src/app/Services/code-fixes.service.ts",
      "frontend/src/app/Services/code-snippet.service.spec.ts",
      "frontend/src/app/Services/code-snippet.service.ts",
      "frontend/src/app/Services/complaint.service.spec.ts",
      "frontend/src/app/Services/complaint.service.ts",
      "frontend/src/app/Services/configuration.service.spec.ts",
      "frontend/src/app/Services/configuration.service.ts",
      "frontend/src/app/Services/country-mapping.service.spec.ts",
      "frontend/src/app/Services/country-mapping.service.ts",
      "frontend/src/app/Services/data-subject.service.spec.ts",
      "frontend/src/app/Services/data-subject.service.ts",
      "frontend/src/app/Services/delivery.service.spec.ts",
      "frontend/src/app/Services/delivery.service.ts",
      "frontend/src/app/Services/feedback.service.spec.ts",
      "frontend/src/app/Services/feedback.service.ts",
      "frontend/src/app/Services/form-submit.service.spec.ts",
      "frontend/src/app/Services/form-submit.service.ts",
      "frontend/src/app/Services/image-captcha.service.spec.ts",
      "frontend/src/app/Services/image-captcha.service.ts",
      "frontend/src/app/Services/keys.service.ts",
      "frontend/src/app/Services/languages.service.spec.ts",
      "frontend/src/app/Services/languages.service.ts",
      "frontend/src/app/Services/local-backup.service.spec.ts",
      "frontend/src/app/Services/local-backup.service.ts",
      "frontend/src/app/Services/order-history.service.spec.ts",
      "frontend/src/app/Services/order-history.service.ts",
      "frontend/src/app/Services/payment.service.spec.ts",
      "frontend/src/app/Services/payment.service.ts",
      "frontend/src/app/Services/photo-wall.service.spec.ts",
      "frontend/src/app/Services/photo-wall.service.ts",
      "frontend/src/app/Services/product-review.service.spec.ts",
      "frontend/src/app/Services/product-review.service.ts",
      "frontend/src/app/Services/product.service.spec.ts",
      "frontend/src/app/Services/product.service.ts",
      "frontend/src/app/Services/quantity.service.spec.ts",
      "frontend/src/app/Services/quantity.service.ts",
      "frontend/src/app/Services/recycle.service.spec.ts",
      "frontend/src/app/Services/recycle.service.ts",
      "frontend/src/app/Services/request.interceptor.ts",
      "frontend/src/app/Services/security-answer.service.spec.ts",
      "frontend/src/app/Services/security-answer.service.ts",
      "frontend/src/app/Services/security-question.service.spec.ts",
      "frontend/src/app/Services/security-question.service.ts",
      "frontend/src/app/Services/snack-bar-helper.service.spec.ts",
      "frontend/src/app/Services/snack-bar-helper.service.ts",
      "frontend/src/app/Services/socket-io.service.spec.ts",
      "frontend/src/app/Services/socket-io.service.ts",
      "frontend/src/app/Services/track-order.service.spec.ts",
      "frontend/src/app/Services/track-order.service.ts",
      "frontend/src/app/Services/two-factor-auth-service.spec.ts",
      "frontend/src/app/Services/two-factor-auth-service.ts",
      "frontend/src/app/Services/user.service.spec.ts",
      "frontend/src/app/Services/user.service.ts",
      "frontend/src/app/Services/vuln-lines.service.spec.ts",
      "frontend/src/app/Services/vuln-lines.service.ts",
      "frontend/src/app/Services/wallet.service.spec.ts",
      "frontend/src/app/Services/wallet.service.ts",
      "frontend/src/app/Services/window-ref.service.spec.ts",
      "frontend/src/app/Services/window-ref.service.ts",
      "frontend/src/app/about/about.component.html",
      "frontend/src/app/about/about.component.scss",
      "frontend/src/app/about/about.component.spec.ts",
      "frontend/src/app/about/about.component.ts",
      "frontend/src/app/accounting/accounting.component.html",
      "frontend/src/app/accounting/accounting.component.scss",
      "frontend/src/app/accounting/accounting.component.spec.ts",
      "frontend/src/app/accounting/accounting.component.ts",
      "frontend/src/app/address/address.component.html",
      "frontend/src/app/address/address.component.scss",
      "frontend/src/app/address/address.component.spec.ts",
      "frontend/src/app/address/address.component.ts",
      "frontend/src/app/address-create/address-create.component.html",
      "frontend/src/app/address-create/address-create.component.scss",
      "frontend/src/app/address-create/address-create.component.spec.ts",
      "frontend/src/app/address-create/address-create.component.ts",
      "frontend/src/app/address-select/address-select.component.html",
      "frontend/src/app/address-select/address-select.component.scss",
      "frontend/src/app/address-select/address-select.component.spec.ts",
      "frontend/src/app/address-select/address-select.component.ts",
      "frontend/src/app/administration/administration.component.html",
      "frontend/src/app/administration/administration.component.scss",
      "frontend/src/app/administration/administration.component.spec.ts",
      "frontend/src/app/administration/administration.component.ts",
      "frontend/src/app/app.component.html",
      "frontend/src/app/app.component.scss",
      "frontend/src/app/app.component.spec.ts",
      "frontend/src/app/app.component.ts",
      "frontend/src/app/app.guard.spec.ts",
      "frontend/src/app/app.guard.ts",
      "frontend/src/app/app.module.ts",
      "frontend/src/app/app.routing.ts",
      "frontend/src/app/basket/basket.component.html",
      "frontend/src/app/basket/basket.component.scss",
      "frontend/src/app/basket/basket.component.spec.ts",
      "frontend/src/app/basket/basket.component.ts",
      "frontend/src/app/challenge-solved-notification/challenge-solved-notification.component.html",
      "frontend/src/app/challenge-solved-notification/challenge-solved-notification.component.scss",
      "frontend/src/app/challenge-solved-notification/challenge-solved-notification.component.spec.ts",
      "frontend/src/app/challenge-solved-notification/challenge-solved-notification.component.ts",
      "frontend/src/app/challenge-status-badge/challenge-status-badge.component.html",
      "frontend/src/app/challenge-status-badge/challenge-status-badge.component.scss",
      "frontend/src/app/challenge-status-badge/challenge-status-badge.component.spec.ts",
      "frontend/src/app/challenge-status-badge/challenge-status-badge.component.ts",
      "frontend/src/app/change-password/change-password.component.html",
      "frontend/src/app/change-password/change-password.component.scss",
      "frontend/src/app/change-password/change-password.component.spec.ts",
      "frontend/src/app/change-password/change-password.component.ts",
      "frontend/src/app/chatbot/chatbot.component.html",
      "frontend/src/app/chatbot/chatbot.component.scss",
      "frontend/src/app/chatbot/chatbot.component.spec.ts",
      "frontend/src/app/chatbot/chatbot.component.ts",
      "frontend/src/app/code-area/code-area.component.html",
      "frontend/src/app/code-area/code-area.component.scss",
      "frontend/src/app/code-area/code-area.component.spec.ts",
      "frontend/src/app/code-area/code-area.component.ts",
      "frontend/src/app/code-fixes/code-fixes.component.html",
      "frontend/src/app/code-fixes/code-fixes.component.scss",
      "frontend/src/app/code-fixes/code-fixes.component.spec.ts",
      "frontend/src/app/code-fixes/code-fixes.component.ts",
      "frontend/src/app/code-snippet/code-snippet.component.html",
      "frontend/src/app/code-snippet/code-snippet.component.scss",
      "frontend/src/app/code-snippet/code-snippet.component.spec.ts",
      "frontend/src/app/code-snippet/code-snippet.component.ts",
      "frontend/src/app/complaint/complaint.component.html",
      "frontend/src/app/complaint/complaint.component.scss",
      "frontend/src/app/complaint/complaint.component.spec.ts",
      "frontend/src/app/complaint/complaint.component.ts",
      "frontend/src/app/contact/contact.component.html",
      "frontend/src/app/contact/contact.component.scss",
      "frontend/src/app/contact/contact.component.spec.ts",
      "frontend/src/app/contact/contact.component.ts",
      "frontend/src/app/data-export/data-export.component.html",
      "frontend/src/app/data-export/data-export.component.scss",
      "frontend/src/app/data-export/data-export.component.spec.ts",
      "frontend/src/app/data-export/data-export.component.ts",
      "frontend/src/app/delivery-method/delivery-method.component.html",
      "frontend/src/app/delivery-method/delivery-method.component.scss",
      "frontend/src/app/delivery-method/delivery-method.component.spec.ts",
      "frontend/src/app/delivery-method/delivery-method.component.ts",
      "frontend/src/app/deluxe-user/deluxe-user.component.html",
      "frontend/src/app/deluxe-user/deluxe-user.component.scss",
      "frontend/src/app/deluxe-user/deluxe-user.component.spec.ts",
      "frontend/src/app/deluxe-user/deluxe-user.component.ts",
      "frontend/src/app/error-page/error-page.component.html",
      "frontend/src/app/error-page/error-page.component.scss",
      "frontend/src/app/error-page/error-page.component.spec.ts",
      "frontend/src/app/error-page/error-page.component.ts",
      "frontend/src/app/faucet/faucet.component.html",
      "frontend/src/app/faucet/faucet.component.scss",
      "frontend/src/app/faucet/faucet.component.ts",
      "frontend/src/app/faucet/faucet.module.ts",
      "frontend/src/app/feedback-details/feedback-details.component.html",
      "frontend/src/app/feedback-details/feedback-details.component.scss",
      "frontend/src/app/feedback-details/feedback-details.component.spec.ts",
      "frontend/src/app/feedback-details/feedback-details.component.ts",
      "frontend/src/app/forgot-password/forgot-password.component.html",
      "frontend/src/app/forgot-password/forgot-password.component.scss",
      "frontend/src/app/forgot-password/forgot-password.component.spec.ts",
      "frontend/src/app/forgot-password/forgot-password.component.ts",
      "frontend/src/app/last-login-ip/last-login-ip.component.html",
      "frontend/src/app/last-login-ip/last-login-ip.component.scss",
      "frontend/src/app/last-login-ip/last-login-ip.component.spec.ts",
      "frontend/src/app/last-login-ip/last-login-ip.component.ts",
      "frontend/src/app/login/login.component.html",
      "frontend/src/app/login/login.component.scss",
      "frontend/src/app/login/login.component.spec.ts",
      "frontend/src/app/login/login.component.ts",
      "frontend/src/app/navbar/navbar.component.html",
      "frontend/src/app/navbar/navbar.component.scss",
      "frontend/src/app/navbar/navbar.component.spec.ts",
      "frontend/src/app/navbar/navbar.component.ts",
      "frontend/src/app/nft-unlock/nft-unlock.component.html",
      "frontend/src/app/nft-unlock/nft-unlock.component.scss",
      "frontend/src/app/nft-unlock/nft-unlock.component.ts",
      "frontend/src/app/oauth/oauth.component.html",
      "frontend/src/app/oauth/oauth.component.scss",
      "frontend/src/app/oauth/oauth.component.spec.ts",
      "frontend/src/app/oauth/oauth.component.ts",
      "frontend/src/app/order-completion/order-completion.component.html",
      "frontend/src/app/order-completion/order-completion.component.scss",
      "frontend/src/app/order-completion/order-completion.component.spec.ts",
      "frontend/src/app/order-completion/order-completion.component.ts",
      "frontend/src/app/order-history/order-history.component.html",
      "frontend/src/app/order-history/order-history.component.scss",
      "frontend/src/app/order-history/order-history.component.spec.ts",
      "frontend/src/app/order-history/order-history.component.ts",
      "frontend/src/app/order-summary/order-summary.component.html",
      "frontend/src/app/order-summary/order-summary.component.scss",
      "frontend/src/app/order-summary/order-summary.component.spec.ts",
      "frontend/src/app/order-summary/order-summary.component.ts",
      "frontend/src/app/payment/payment.component.html",
      "frontend/src/app/payment/payment.component.scss",
      "frontend/src/app/payment/payment.component.spec.ts",
      "frontend/src/app/payment/payment.component.ts",
      "frontend/src/app/payment-method/payment-method.component.html",
      "frontend/src/app/payment-method/payment-method.component.scss",
      "frontend/src/app/payment-method/payment-method.component.spec.ts",
      "frontend/src/app/payment-method/payment-method.component.ts",
      "frontend/src/app/photo-wall/mime-type.validator.ts",
      "frontend/src/app/photo-wall/photo-wall.component.html",
      "frontend/src/app/photo-wall/photo-wall.component.scss",
      "frontend/src/app/photo-wall/photo-wall.component.spec.ts",
      "frontend/src/app/photo-wall/photo-wall.component.ts",
      "frontend/src/app/privacy-policy/privacy-policy.component.html",
      "frontend/src/app/privacy-policy/privacy-policy.component.scss",
      "frontend/src/app/privacy-policy/privacy-policy.component.spec.ts",
      "frontend/src/app/privacy-policy/privacy-policy.component.ts",
      "frontend/src/app/privacy-security/privacy-security.component.html",
      "frontend/src/app/privacy-security/privacy-security.component.scss",
      "frontend/src/app/privacy-security/privacy-security.component.spec.ts",
      "frontend/src/app/privacy-security/privacy-security.component.ts",
      "frontend/src/app/product-details/product-details.component.html",
      "frontend/src/app/product-details/product-details.component.scss",
      "frontend/src/app/product-details/product-details.component.spec.ts",
      "frontend/src/app/product-details/product-details.component.ts",
      "frontend/src/app/product-review-edit/product-review-edit.component.html",
      "frontend/src/app/product-review-edit/product-review-edit.component.scss",
      "frontend/src/app/product-review-edit/product-review-edit.component.spec.ts",
      "frontend/src/app/product-review-edit/product-review-edit.component.ts",
      "frontend/src/app/purchase-basket/purchase-basket.component.html",
      "frontend/src/app/purchase-basket/purchase-basket.component.scss",
      "frontend/src/app/purchase-basket/purchase-basket.component.spec.ts",
      "frontend/src/app/purchase-basket/purchase-basket.component.ts",
      "frontend/src/app/qr-code/qr-code.component.html",
      "frontend/src/app/qr-code/qr-code.component.scss",
      "frontend/src/app/qr-code/qr-code.component.spec.ts",
      "frontend/src/app/qr-code/qr-code.component.ts",
      "frontend/src/app/recycle/recycle.component.html",
      "frontend/src/app/recycle/recycle.component.scss",
      "frontend/src/app/recycle/recycle.component.spec.ts",
      "frontend/src/app/recycle/recycle.component.ts",
      "frontend/src/app/register/register.component.html",
      "frontend/src/app/register/register.component.scss",
      "frontend/src/app/register/register.component.spec.ts",
      "frontend/src/app/register/register.component.ts",
      "frontend/src/app/roles.ts",
      "frontend/src/app/saved-address/saved-address.component.html",
      "frontend/src/app/saved-address/saved-address.component.scss",
      "frontend/src/app/saved-address/saved-address.component.spec.ts",
      "frontend/src/app/saved-address/saved-address.component.ts",
      "frontend/src/app/saved-payment-methods/saved-payment-methods.component.html",
      "frontend/src/app/saved-payment-methods/saved-payment-methods.component.scss",
      "frontend/src/app/saved-payment-methods/saved-payment-methods.component.spec.ts",
      "frontend/src/app/saved-payment-methods/saved-payment-methods.component.ts",
      "frontend/src/app/score-board/components/challenge-card/challenge-card.component.html",
      "frontend/src/app/score-board/components/challenge-card/challenge-card.component.scss",
      "frontend/src/app/score-board/components/challenge-card/challenge-card.component.spec.ts",
      "frontend/src/app/score-board/components/challenge-card/challenge-card.component.ts",
      "frontend/src/app/score-board/components/challenges-unavailable-warning/challenges-unavailable-warning.component.html",
      "frontend/src/app/score-board/components/challenges-unavailable-warning/challenges-unavailable-warning.component.scss",
      "frontend/src/app/score-board/components/challenges-unavailable-warning/challenges-unavailable-warning.component.spec.ts",
      "frontend/src/app/score-board/components/challenges-unavailable-warning/challenges-unavailable-warning.component.ts",
      "frontend/src/app/score-board/components/coding-challenge-progress-score-card/coding-challenge-progress-score-card.component.html",
      "frontend/src/app/score-board/components/coding-challenge-progress-score-card/coding-challenge-progress-score-card.component.scss",
      "frontend/src/app/score-board/components/coding-challenge-progress-score-card/coding-challenge-progress-score-card.component.spec.ts",
      "frontend/src/app/score-board/components/coding-challenge-progress-score-card/coding-challenge-progress-score-card.component.ts",
      "frontend/src/app/score-board/components/difficulty-overview-score-card/difficulty-overview-score-card.component.html",
      "frontend/src/app/score-board/components/difficulty-overview-score-card/difficulty-overview-score-card.component.scss",
      "frontend/src/app/score-board/components/difficulty-overview-score-card/difficulty-overview-score-card.component.spec.ts",
      "frontend/src/app/score-board/components/difficulty-overview-score-card/difficulty-overview-score-card.component.ts",
      "frontend/src/app/score-board/components/difficulty-stars/difficulty-stars.component.html",
      "frontend/src/app/score-board/components/difficulty-stars/difficulty-stars.component.scss",
      "frontend/src/app/score-board/components/difficulty-stars/difficulty-stars.component.ts",
      "frontend/src/app/score-board/components/filter-settings/components/category-filter/category-filter.component.html",
      "frontend/src/app/score-board/components/filter-settings/components/category-filter/category-filter.component.scss",
      "frontend/src/app/score-board/components/filter-settings/components/category-filter/category-filter.component.spec.ts",
      "frontend/src/app/score-board/components/filter-settings/components/category-filter/category-filter.component.ts",
      "frontend/src/app/score-board/components/filter-settings/components/score-board-additional-settings-dialog/score-board-additional-settings-dialog.component.html",
      "frontend/src/app/score-board/components/filter-settings/components/score-board-additional-settings-dialog/score-board-additional-settings-dialog.component.scss",
      "frontend/src/app/score-board/components/filter-settings/components/score-board-additional-settings-dialog/score-board-additional-settings-dialog.component.spec.ts",
      "frontend/src/app/score-board/components/filter-settings/components/score-board-additional-settings-dialog/score-board-additional-settings-dialog.component.ts",
      "frontend/src/app/score-board/components/filter-settings/filter-settings.component.html",
      "frontend/src/app/score-board/components/filter-settings/filter-settings.component.scss",
      "frontend/src/app/score-board/components/filter-settings/filter-settings.component.spec.ts",
      "frontend/src/app/score-board/components/filter-settings/filter-settings.component.ts",
      "frontend/src/app/score-board/components/filter-settings/pipes/difficulty-selection-summary.pipe.spec.ts",
      "frontend/src/app/score-board/components/filter-settings/pipes/difficulty-selection-summary.pipe.ts",
      "frontend/src/app/score-board/components/hacking-challenge-progress-score-card/hacking-challenge-progress-score-card.component.html",
      "frontend/src/app/score-board/components/hacking-challenge-progress-score-card/hacking-challenge-progress-score-card.component.scss",
      "frontend/src/app/score-board/components/hacking-challenge-progress-score-card/hacking-challenge-progress-score-card.component.spec.ts",
      "frontend/src/app/score-board/components/hacking-challenge-progress-score-card/hacking-challenge-progress-score-card.component.ts",
      "frontend/src/app/score-board/components/score-card/score-card.component.html",
      "frontend/src/app/score-board/components/score-card/score-card.component.scss",
      "frontend/src/app/score-board/components/score-card/score-card.component.spec.ts",
      "frontend/src/app/score-board/components/score-card/score-card.component.ts",
      "frontend/src/app/score-board/components/tutorial-mode-warning/tutorial-mode-warning.component.html",
      "frontend/src/app/score-board/components/tutorial-mode-warning/tutorial-mode-warning.component.spec.ts",
      "frontend/src/app/score-board/components/tutorial-mode-warning/tutorial-mode-warning.component.ts",
      "frontend/src/app/score-board/components/warning-card/warning-card.component.html",
      "frontend/src/app/score-board/components/warning-card/warning-card.component.scss",
      "frontend/src/app/score-board/components/warning-card/warning-card.component.ts",
      "frontend/src/app/score-board/filter-settings/FilterSetting.ts",
      "frontend/src/app/score-board/filter-settings/query-params-converters.ts",
      "frontend/src/app/score-board/filter-settings/query-params-coverter.spec.ts",
      "frontend/src/app/score-board/helpers/challenge-filtering.spec.ts",
      "frontend/src/app/score-board/helpers/challenge-filtering.ts",
      "frontend/src/app/score-board/helpers/challenge-sorting.spec.ts",
      "frontend/src/app/score-board/helpers/challenge-sorting.ts",
      "frontend/src/app/score-board/pipes/challenge-hint.pipe.ts",
      "frontend/src/app/score-board/score-board.component.html",
      "frontend/src/app/score-board/score-board.component.scss",
      "frontend/src/app/score-board/score-board.component.spec.ts",
      "frontend/src/app/score-board/score-board.component.ts",
      "frontend/src/app/score-board/score-board.module.ts",
      "frontend/src/app/score-board/types/EnrichedChallenge.ts",
      "frontend/src/app/search-result/search-result.component.html",
      "frontend/src/app/search-result/search-result.component.scss",
      "frontend/src/app/search-result/search-result.component.spec.ts",
      "frontend/src/app/search-result/search-result.component.ts",
      "frontend/src/app/server-started-notification/server-started-notification.component.html",
      "frontend/src/app/server-started-notification/server-started-notification.component.scss",
      "frontend/src/app/server-started-notification/server-started-notification.component.spec.ts",
      "frontend/src/app/server-started-notification/server-started-notification.component.ts",
      "frontend/src/app/sidenav/sidenav.component.html",
      "frontend/src/app/sidenav/sidenav.component.scss",
      "frontend/src/app/sidenav/sidenav.component.spec.ts",
      "frontend/src/app/sidenav/sidenav.component.ts",
      "frontend/src/app/token-sale/token-sale.component.html",
      "frontend/src/app/token-sale/token-sale.component.scss",
      "frontend/src/app/token-sale/token-sale.component.spec.ts",
      "frontend/src/app/token-sale/token-sale.component.ts",
      "frontend/src/app/track-result/track-result.component.html",
      "frontend/src/app/track-result/track-result.component.scss",
      "frontend/src/app/track-result/track-result.component.spec.ts",
      "frontend/src/app/track-result/track-result.component.ts",
      "frontend/src/app/two-factor-auth/two-factor-auth.component.html",
      "frontend/src/app/two-factor-auth/two-factor-auth.component.scss",
      "frontend/src/app/two-factor-auth/two-factor-auth.component.spec.ts",
      "frontend/src/app/two-factor-auth/two-factor-auth.component.ts",
      "frontend/src/app/two-factor-auth-enter/two-factor-auth-enter.component.html",
      "frontend/src/app/two-factor-auth-enter/two-factor-auth-enter.component.scss",
      "frontend/src/app/two-factor-auth-enter/two-factor-auth-enter.component.spec.ts",
      "frontend/src/app/two-factor-auth-enter/two-factor-auth-enter.component.ts",
      "frontend/src/app/user-details/user-details.component.html",
      "frontend/src/app/user-details/user-details.component.scss",
      "frontend/src/app/user-details/user-details.component.spec.ts",
      "frontend/src/app/user-details/user-details.component.ts",
      "frontend/src/app/wallet/wallet.component.html",
      "frontend/src/app/wallet/wallet.component.scss",
      "frontend/src/app/wallet/wallet.component.spec.ts",
      "frontend/src/app/wallet/wallet.component.ts",
      "frontend/src/app/wallet-web3/wallet-web3.component.html",
      "frontend/src/app/wallet-web3/wallet-web3.component.scss",
      "frontend/src/app/wallet-web3/wallet-web3.component.ts",
      "frontend/src/app/wallet-web3/wallet-web3.module.ts",
      "frontend/src/app/web3-sandbox/web3-sandbox.component.html",
      "frontend/src/app/web3-sandbox/web3-sandbox.component.scss",
      "frontend/src/app/web3-sandbox/web3-sandbox.component.ts",
      "frontend/src/app/web3-sandbox/web3-sandbox.module.ts",
      "frontend/src/app/welcome/welcome.component.html",
      "frontend/src/app/welcome/welcome.component.scss",
      "frontend/src/app/welcome/welcome.component.spec.ts",
      "frontend/src/app/welcome/welcome.component.ts",
      "frontend/src/app/welcome-banner/welcome-banner.component.html",
      "frontend/src/app/welcome-banner/welcome-banner.component.scss",
      "frontend/src/app/welcome-banner/welcome-banner.component.spec.ts",
      "frontend/src/app/welcome-banner/welcome-banner.component.ts",
      "frontend/src/assets/i18n/ar_SA.json",
      "frontend/src/assets/i18n/az_AZ.json",
      "frontend/src/assets/i18n/bg_BG.json",
      "frontend/src/assets/i18n/bn_BD.json",
      "frontend/src/assets/i18n/ca_ES.json",
      "frontend/src/assets/i18n/cs_CZ.json",
      "frontend/src/assets/i18n/da_DK.json",
      "frontend/src/assets/i18n/de_CH.json",
      "frontend/src/assets/i18n/de_DE.json",
      "frontend/src/assets/i18n/el_GR.json",
      "frontend/src/assets/i18n/en.json",
      "frontend/src/assets/i18n/es_ES.json",
      "frontend/src/assets/i18n/et_EE.json",
      "frontend/src/assets/i18n/fi_FI.json",
      "frontend/src/assets/i18n/fr_FR.json",
      "frontend/src/assets/i18n/ga_IE.json",
      "frontend/src/assets/i18n/he_IL.json",
      "frontend/src/assets/i18n/hi_IN.json",
      "frontend/src/assets/i18n/hu_HU.json",
      "frontend/src/assets/i18n/id_ID.json",
      "frontend/src/assets/i18n/it_IT.json",
      "frontend/src/assets/i18n/ja_JP.json",
      "frontend/src/assets/i18n/ka_GE.json",
      "frontend/src/assets/i18n/ko_KR.json",
      "frontend/src/assets/i18n/lv_LV.json",
      "frontend/src/assets/i18n/my_MM.json",
      "frontend/src/assets/i18n/nl_NL.json",
      "frontend/src/assets/i18n/no_NO.json",
      "frontend/src/assets/i18n/pl_PL.json",
      "frontend/src/assets/i18n/pt_BR.json",
      "frontend/src/assets/i18n/pt_PT.json",
      "frontend/src/assets/i18n/ro_RO.json",
      "frontend/src/assets/i18n/ru_RU.json",
      "frontend/src/assets/i18n/si_LK.json",
      "frontend/src/assets/i18n/sv_SE.json",
      "frontend/src/assets/i18n/th_TH.json",
      "frontend/src/assets/i18n/tlh_AA.json",
      "frontend/src/assets/i18n/tr_TR.json",
      "frontend/src/assets/i18n/uk_UA.json",
      "frontend/src/assets/i18n/zh_CN.json",
      "frontend/src/assets/i18n/zh_HK.json",
      "frontend/src/assets/i18n/zh_TW.json",
      "frontend/src/assets/private/CopyShader.js",
      "frontend/src/assets/private/EffectComposer.js",
      "frontend/src/assets/private/JuiceShop_Wallpaper_1920x1080_VR.jpg",
      "frontend/src/assets/private/MaskPass.js",
      "frontend/src/assets/private/OrbitControls.js",
      "frontend/src/assets/private/RenderPass.js",
      "frontend/src/assets/private/ShaderPass.js",
      "frontend/src/assets/private/earthspec4k.jpg",
      "frontend/src/assets/private/orangemap2k.jpg",
      "frontend/src/assets/private/three.js",
      "frontend/src/assets/private/threejs-demo.html",
      "frontend/src/assets/public/ContractABIs.ts",
      "frontend/src/assets/public/css/dataErasure.css",
      "frontend/src/assets/public/css/userProfile.css",
      "frontend/src/assets/public/favicon_ctf.ico",
      "frontend/src/assets/public/favicon_js.ico",
      "frontend/src/assets/public/images/BeeOwner.png",
      "frontend/src/assets/public/images/HoneyPot.png",
      "frontend/src/assets/public/images/JuiceShopCTF_Logo.png",
      "frontend/src/assets/public/images/JuiceShopCTF_Logo_400px.png",
      "frontend/src/assets/public/images/JuiceShop_Logo.ai",
      "frontend/src/assets/public/images/JuiceShop_Logo.png",
      "frontend/src/assets/public/images/JuiceShop_Logo.svg",
      "frontend/src/assets/public/images/JuiceShop_Logo_100px.png",
      "frontend/src/assets/public/images/JuiceShop_Logo_400px.png",
      "frontend/src/assets/public/images/JuiceShop_Logo_50px.png",
      "frontend/src/assets/public/images/JuicyBot.png",
      "frontend/src/assets/public/images/JuicyBot_MedicalMask.png",
      "frontend/src/assets/public/images/JuicyChatBot.png",
      "frontend/src/assets/public/images/Welcome_Banner.svg",
      "frontend/src/assets/public/images/carousel/1.jpg",
      "frontend/src/assets/public/images/carousel/2.jpg",
      "frontend/src/assets/public/images/carousel/3.jpg",
      "frontend/src/assets/public/images/carousel/4.jpg",
      "frontend/src/assets/public/images/carousel/5.png",
      "frontend/src/assets/public/images/carousel/6.jpg",
      "frontend/src/assets/public/images/carousel/7.jpg",
      "frontend/src/assets/public/images/deluxe/blankBoxes.png",
      "frontend/src/assets/public/images/juicyEvilWasp.png",
      "frontend/src/assets/public/images/padding/11px.png",
      "frontend/src/assets/public/images/padding/19px.png",
      "frontend/src/assets/public/images/padding/1px.png",
      "frontend/src/assets/public/images/padding/56px.png",
      "frontend/src/assets/public/images/padding/81px.png",
      "frontend/src/assets/public/images/products/3d_keychain.jpg",
      "frontend/src/assets/public/images/products/JuiceShop.stl",
      "frontend/src/assets/public/images/products/apple_juice.jpg",
      "frontend/src/assets/public/images/products/apple_pressings.jpg",
      "frontend/src/assets/public/images/products/artwork.jpg",
      "frontend/src/assets/public/images/products/artwork2.jpg",
      "frontend/src/assets/public/images/products/banana_juice.jpg",
      "frontend/src/assets/public/images/products/card_alpha.jpg",
      "frontend/src/assets/public/images/products/carrot_juice.jpeg",
      "frontend/src/assets/public/images/products/ccg_common.png",
      "frontend/src/assets/public/images/products/ccg_foil.png",
      "frontend/src/assets/public/images/products/coaster.jpg",
      "frontend/src/assets/public/images/products/cover_small.jpg",
      "frontend/src/assets/public/images/products/eggfruit_juice.jpg",
      "frontend/src/assets/public/images/products/fan_facemask.jpg",
      "frontend/src/assets/public/images/products/fan_girlie.jpg",
      "frontend/src/assets/public/images/products/fan_hoodie.jpg",
      "frontend/src/assets/public/images/products/fan_mug.jpg",
      "frontend/src/assets/public/images/products/fan_shirt.jpg",
      "frontend/src/assets/public/images/products/fruit_press.jpg",
      "frontend/src/assets/public/images/products/green_smoothie.jpg",
      "frontend/src/assets/public/images/products/holo_sticker.png",
      "frontend/src/assets/public/images/products/iron-on.jpg",
      "frontend/src/assets/public/images/products/juicy_chatbot.jpg",
      "frontend/src/assets/public/images/products/lego_case.jpg",
      "frontend/src/assets/public/images/products/lemon_juice.jpg",
      "frontend/src/assets/public/images/products/magnets.jpg",
      "frontend/src/assets/public/images/products/melon_bike.jpeg",
      "frontend/src/assets/public/images/products/no-results.png",
      "frontend/src/assets/public/images/products/orange_juice.jpg",
      "frontend/src/assets/public/images/products/permafrost.jpg",
      "frontend/src/assets/public/images/products/quince.jpg",
      "frontend/src/assets/public/images/products/raspberry_juice.jpg",
      "frontend/src/assets/public/images/products/snakes_ladders.jpg",
      "frontend/src/assets/public/images/products/snakes_ladders_m.jpg",
      "frontend/src/assets/public/images/products/squareBox1-40x40x40.stl",
      "frontend/src/assets/public/images/products/sticker.png",
      "frontend/src/assets/public/images/products/sticker_page.jpg",
      "frontend/src/assets/public/images/products/sticker_single.jpg",
      "frontend/src/assets/public/images/products/stickersheet_se.png",
      "frontend/src/assets/public/images/products/strawberry_juice.jpeg",
      "frontend/src/assets/public/images/products/tattoo.jpg",
      "frontend/src/assets/public/images/products/thingie1.jpg",
      "frontend/src/assets/public/images/products/undefined.png",
      "frontend/src/assets/public/images/products/user_day_ticket.png",
      "frontend/src/assets/public/images/products/velcro-patch.jpg",
      "frontend/src/assets/public/images/products/waspy.png",
      "frontend/src/assets/public/images/products/woodruff_syrup.jpg",
      "frontend/src/assets/public/images/uploads/12.png",
      "frontend/src/assets/public/images/uploads/13.jpg",
      "frontend/src/assets/public/images/uploads/20.jpg",
      "frontend/src/assets/public/images/uploads/BeeHaven.png",
      "frontend/src/assets/public/images/uploads/building-something-literally-bottom-up-1721152342603.jpg",
      "frontend/src/assets/public/images/uploads/default.svg",
      "frontend/src/assets/public/images/uploads/defaultAdmin.png",
      "frontend/src/assets/public/images/uploads/everything-up-and-running!-1721152385146.jpg",
      "frontend/src/assets/public/images/uploads/favorite-hiking-place.png",
      "frontend/src/assets/public/images/uploads/magn(et)ificent!-1571814229653.jpg",
      "frontend/src/assets/public/images/uploads/putting-in-the-hardware-1721152366854.jpg",
      "frontend/src/assets/public/images/uploads/sorted-the-pieces,-starting-assembly-process-1721152307290.jpg",
      "frontend/src/confetti/index.ts",
      "frontend/src/environments/environment.prod.ts",
      "frontend/src/environments/environment.ts",
      "frontend/src/hacking-instructor/challenges/adminSection.ts",
      "frontend/src/hacking-instructor/challenges/bonusPayload.ts",
      "frontend/src/hacking-instructor/challenges/codingChallenges.ts",
      "frontend/src/hacking-instructor/challenges/domXss.ts",
      "frontend/src/hacking-instructor/challenges/forgedFeedback.ts",
      "frontend/src/hacking-instructor/challenges/loginAdmin.ts",
      "frontend/src/hacking-instructor/challenges/loginBender.ts",
      "frontend/src/hacking-instructor/challenges/loginJim.ts",
      "frontend/src/hacking-instructor/challenges/passwordStrength.ts",
      "frontend/src/hacking-instructor/challenges/privacyPolicy.ts",
      "frontend/src/hacking-instructor/challenges/reflectedXss.ts",
      "frontend/src/hacking-instructor/challenges/scoreBoard.ts",
      "frontend/src/hacking-instructor/challenges/viewBasket.ts",
      "frontend/src/hacking-instructor/helpers/helpers.ts",
      "frontend/src/hacking-instructor/index.ts",
      "frontend/src/hacking-instructor/tutorialUnavailable.ts",
      "frontend/src/index.html",
      "frontend/src/karma.conf.js",
      "frontend/src/main.ts",
      "frontend/src/polyfills.ts",
      "frontend/src/styles.scss",
      "frontend/src/test.ts",
      "frontend/src/theme.scss",
      "frontend/src/tsconfig.app.json",
      "frontend/src/tsconfig.spec.json",
      "frontend/tsconfig.base.json",
      "frontend/tsconfig.json",
      "frontend/webpack.angular.js",
      "ftp/acquisitions.md",
      "ftp/announcement_encrypted.md",
      "ftp/coupons_2013.md.bak",
      "ftp/eastere.gg",
      "ftp/encrypt.pyc",
      "ftp/incident-support.kdbx",
      "ftp/package.json.bak",
      "ftp/quarantine/juicy_malware_linux_amd_64.url",
      "ftp/quarantine/juicy_malware_linux_arm_64.url",
      "ftp/quarantine/juicy_malware_macos_64.url",
      "ftp/quarantine/juicy_malware_windows_64.exe.url",
      "ftp/suspicious_errors.yml",
      "i18n/.gitkeep",
      "lib/accuracy.ts",
      "lib/antiCheat.ts",
      "lib/botUtils.ts",
      "lib/challengeUtils.ts",
      "lib/codingChallenges.ts",
      "lib/config.types.ts",
      "lib/insecurity.ts",
      "lib/is-docker.ts",
      "lib/is-heroku.ts",
      "lib/is-windows.ts",
      "lib/logger.ts",
      "lib/noUpdate.ts",
      "lib/startup/cleanupFtpFolder.ts",
      "lib/startup/customizeApplication.ts",
      "lib/startup/customizeEasterEgg.ts",
      "lib/startup/registerWebsocketEvents.ts",
      "lib/startup/restoreOverwrittenFilesWithOriginals.ts",
      "lib/startup/validateChatBot.ts",
      "lib/startup/validateConfig.ts",
      "lib/startup/validateDependencies.ts",
      "lib/startup/validateDependenciesBasic.ts",
      "lib/startup/validatePreconditions.ts",
      "lib/utils.ts",
      "lib/webhook.ts",
      "models/address.ts",
      "models/basket.ts",
      "models/basketitem.ts",
      "models/captcha.ts",
      "models/card.ts",
      "models/challenge.ts",
      "models/complaint.ts",
      "models/delivery.ts",
      "models/feedback.ts",
      "models/imageCaptcha.ts",
      "models/index.ts",
      "models/memory.ts",
      "models/privacyRequests.ts",
      "models/product.ts",
      "models/quantity.ts",
      "models/recycle.ts",
      "models/relations.ts",
      "models/securityAnswer.ts",
      "models/securityQuestion.ts",
      "models/user.ts",
      "models/wallet.ts",
      "monitoring/grafana-dashboard.json",
      "package.json",
      "results.json",
      "routes/2fa.ts",
      "routes/address.ts",
      "routes/angular.ts",
      "routes/appConfiguration.ts",
      "routes/appVersion.ts",
      "routes/authenticatedUsers.ts",
      "routes/b2bOrder.ts",
      "routes/basket.ts",
      "routes/basketItems.ts",
      "routes/captcha.ts",
      "routes/changePassword.ts",
      "routes/chatbot.ts",
      "routes/checkKeys.ts",
      "routes/continueCode.ts",
      "routes/countryMapping.ts",
      "routes/coupon.ts",
      "routes/createProductReviews.ts",
      "routes/currentUser.ts",
      "routes/dataErasure.ts",
      "routes/dataExport.ts",
      "routes/delivery.ts",
      "routes/deluxe.ts",
      "routes/easterEgg.ts",
      "routes/fileServer.ts",
      "routes/fileUpload.ts",
      "routes/imageCaptcha.ts",
      "routes/keyServer.ts",
      "routes/languages.ts",
      "routes/likeProductReviews.ts",
      "routes/logfileServer.ts",
      "routes/login.ts",
      "routes/memory.ts",
      "routes/metrics.ts",
      "routes/nftMint.ts",
      "routes/order.ts",
      "routes/orderHistory.ts",
      "routes/payment.ts",
      "routes/premiumReward.ts",
      "routes/privacyPolicyProof.ts",
      "routes/profileImageFileUpload.ts",
      "routes/profileImageUrlUpload.ts",
      "routes/quarantineServer.ts",
      "routes/recycles.ts",
      "routes/redirect.ts",
      "routes/repeatNotification.ts",
      "routes/resetPassword.ts",
      "routes/restoreProgress.ts",
      "routes/saveLoginIp.ts",
      "routes/search.ts",
      "routes/securityQuestion.ts",
      "routes/showProductReviews.ts",
      "routes/trackOrder.ts",
      "routes/updateProductReviews.ts",
      "routes/updateUserProfile.ts",
      "routes/userProfile.ts",
      "routes/verify.ts",
      "routes/videoHandler.ts",
      "routes/vulnCodeFixes.ts",
      "routes/vulnCodeSnippet.ts",
      "routes/wallet.ts",
      "routes/web3Wallet.ts",
      "rsn/cache.json",
      "rsn/rsn-update.ts",
      "rsn/rsn-verbose.ts",
      "rsn/rsn.ts",
      "rsn/rsnUtil.ts",
      "screenshots/git-stats.png",
      "screenshots/screenshot00.png",
      "screenshots/screenshot01.png",
      "screenshots/screenshot02.png",
      "screenshots/screenshot03.png",
      "screenshots/screenshot04.png",
      "screenshots/screenshot05.png",
      "screenshots/screenshot06.png",
      "screenshots/screenshot08.png",
      "screenshots/screenshot09.png",
      "screenshots/screenshot10.png",
      "screenshots/screenshot11.png",
      "screenshots/screenshot12.png",
      "screenshots/screenshot13.png",
      "semgrep-rules.yaml",
      "server.ts",
      "swagger.yml",
      "threat-model.json",
      "tsconfig.json",
      "uploads/complaints/.gitkeep",
      "vagrant/Vagrantfile",
      "vagrant/bootstrap.sh",
      "vagrant/default.conf",
      "views/dataErasureForm.hbs",
      "views/dataErasureResult.hbs",
      "views/promotionVideo.pug",
      "views/themes/themes.js",
      "views/userProfile.pug"
    ]
  },
  "results": [
    {
      "check_id": "javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
      "end": {
        "col": 162,
        "line": 5,
        "offset": 428
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "criteria",
              "location": {
                "end": {
                  "col": 17,
                  "line": 3,
                  "offset": 126
                },
                "path": "data/static/codefixes/dbSchemaChallenge_1.ts",
                "start": {
                  "col": 9,
                  "line": 3,
                  "offset": 118
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 162,
                  "line": 5,
                  "offset": 428
                },
                "path": "data/static/codefixes/dbSchemaChallenge_1.ts",
                "start": {
                  "col": 28,
                  "line": 5,
                  "offset": 294
                }
              },
              "\"SELECT * FROM Products WHERE ((name LIKE '%\"+criteria+\"%' OR description LIKE '%\"+criteria+\"%') AND deletedAt IS NULL) ORDER BY name\""
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 69,
                  "line": 3,
                  "offset": 178
                },
                "path": "data/static/codefixes/dbSchemaChallenge_1.ts",
                "start": {
                  "col": 60,
                  "line": 3,
                  "offset": 169
                }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "01b8e724b9b2ca911743bd18718f705749ee2d12329b08125c003a1141def61cecdb34215ced0cd85fd4a0209fa6f4e024c13099eb57a6251a313830acb5172a_0",
        "is_ignored": false,
        "lines": "    models.sequelize.query(\"SELECT * FROM Products WHERE ((name LIKE '%\"+criteria+\"%' OR description LIKE '%\"+criteria+\"%') AND deletedAt IS NULL) ORDER BY name\")",
        "message": "Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://sequelize.org/docs/v6/core-concepts/raw-queries/#replacements"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 22085,
              "rule_id": "yyU0GX",
              "rv_id": 834186,
              "url": "https://semgrep.dev/playground/r/w8TAxwx/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
              "version_id": "w8TAxwx"
            }
          },
          "shortlink": "https://sg.run/gjoe",
          "source": "https://semgrep.dev/r/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "SQL Injection"
          ]
        },
        "metavars": {
          "$DB": {
            "abstract_content": "models",
            "end": {
              "col": 11,
              "line": 5,
              "offset": 277
            },
            "start": {
              "col": 5,
              "line": 5,
              "offset": 271
            }
          },
          "$NEXT": {
            "abstract_content": "next",
            "end": {
              "col": 44,
              "line": 2,
              "offset": 89
            },
            "start": {
              "col": 40,
              "line": 2,
              "offset": 85
            }
          },
          "$QUERY": {
            "abstract_content": "\"SELECT * FROM Products WHERE ((name LIKE '%\"+criteria+\"%' OR description LIKE '%\"+criteria+\"%') AND deletedAt IS NULL) ORDER BY name\"",
            "end": {
              "col": 162,
              "line": 5,
              "offset": 428
            },
            "start": {
              "col": 28,
              "line": 5,
              "offset": 294
            }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": {
              "col": 63,
              "line": 3,
              "offset": 172
            },
            "start": {
              "col": 60,
              "line": 3,
              "offset": 169
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 28,
              "line": 2,
              "offset": 73
            },
            "start": {
              "col": 25,
              "line": 2,
              "offset": 70
            }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "data/static/codefixes/dbSchemaChallenge_1.ts",
      "start": {
        "col": 28,
        "line": 5,
        "offset": 294
      }
    },
    {
      "check_id": "javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
      "end": {
        "col": 82,
        "line": 5,
        "offset": 348
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "criteria",
              "location": {
                "end": {
                  "col": 17,
                  "line": 3,
                  "offset": 126
                },
                "path": "data/static/codefixes/dbSchemaChallenge_1.ts",
                "start": {
                  "col": 9,
                  "line": 3,
                  "offset": 118
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 82,
                  "line": 5,
                  "offset": 348
                },
                "path": "data/static/codefixes/dbSchemaChallenge_1.ts",
                "start": {
                  "col": 74,
                  "line": 5,
                  "offset": 340
                }
              },
              "criteria"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 69,
                  "line": 3,
                  "offset": 178
                },
                "path": "data/static/codefixes/dbSchemaChallenge_1.ts",
                "start": {
                  "col": 60,
                  "line": 3,
                  "offset": 169
                }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "cc6f8a73fe7044cae8b8433c0c5ea2d175f47c90ad6f73a0b0c1e4e9b36069756742671c2d5662a9bf010184c7c773a19bad45b329e39da7b6eaaab6d9a19f11_0",
        "is_ignored": false,
        "lines": "    models.sequelize.query(\"SELECT * FROM Products WHERE ((name LIKE '%\"+criteria+\"%' OR description LIKE '%\"+criteria+\"%') AND deletedAt IS NULL) ORDER BY name\")",
        "message": "Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using an object-relational mapper (ORM) such as Sequelize which will protect your queries.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/SQL_Injection"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 14715,
              "rule_id": "NbUNpr",
              "rv_id": 834108,
              "url": "https://semgrep.dev/playground/r/DkTG0jd/javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "DkTG0jd"
            }
          },
          "shortlink": "https://sg.run/66ZL",
          "source": "https://semgrep.dev/r/javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "SQL Injection"
          ]
        },
        "metavars": {
          "$1": {
            "abstract_content": "SELECT",
            "end": {
              "col": 7,
              "line": 1,
              "offset": 6
            },
            "start": {
              "col": 1,
              "line": 1,
              "offset": 0
            }
          },
          "$EXPR": {
            "abstract_content": "criteria",
            "end": {
              "col": 82,
              "line": 5,
              "offset": 348
            },
            "start": {
              "col": 74,
              "line": 5,
              "offset": 340
            }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": {
              "col": 63,
              "line": 3,
              "offset": 172
            },
            "start": {
              "col": 60,
              "line": 3,
              "offset": 169
            }
          },
          "$SQLSTR": {
            "abstract_content": "SELECT * FROM Products WHERE ((name LIKE '%",
            "end": {
              "col": 72,
              "line": 5,
              "offset": 338
            },
            "start": {
              "col": 29,
              "line": 5,
              "offset": 295
            }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "data/static/codefixes/dbSchemaChallenge_1.ts",
      "start": {
        "col": 74,
        "line": 5,
        "offset": 340
      }
    },
    {
      "check_id": "javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
      "end": {
        "col": 159,
        "line": 11,
        "offset": 560
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "criteria",
              "location": {
                "end": {
                  "col": 17,
                  "line": 5,
                  "offset": 171
                },
                "path": "data/static/codefixes/dbSchemaChallenge_3.ts",
                "start": {
                  "col": 9,
                  "line": 5,
                  "offset": 163
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 159,
                  "line": 11,
                  "offset": 560
                },
                "path": "data/static/codefixes/dbSchemaChallenge_3.ts",
                "start": {
                  "col": 28,
                  "line": 11,
                  "offset": 429
                }
              },
              "`SELECT * FROM Products WHERE ((name LIKE '%${criteria}%' OR description LIKE '%${criteria}%') AND deletedAt IS NULL) ORDER BY name"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 69,
                  "line": 5,
                  "offset": 223
                },
                "path": "data/static/codefixes/dbSchemaChallenge_3.ts",
                "start": {
                  "col": 60,
                  "line": 5,
                  "offset": 214
                }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "4ded94d6131f70079d7885c7bb41acbbcacd1f422be56352873bb2463cf3648e663483dbf43f137e12b1f4f7e7f4b2f875abb2f7e72fcd74695a7e9c05dadfc6_0",
        "is_ignored": false,
        "lines": "    models.sequelize.query(`SELECT * FROM Products WHERE ((name LIKE '%${criteria}%' OR description LIKE '%${criteria}%') AND deletedAt IS NULL) ORDER BY name`)",
        "message": "Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://sequelize.org/docs/v6/core-concepts/raw-queries/#replacements"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 22085,
              "rule_id": "yyU0GX",
              "rv_id": 834186,
              "url": "https://semgrep.dev/playground/r/w8TAxwx/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
              "version_id": "w8TAxwx"
            }
          },
          "shortlink": "https://sg.run/gjoe",
          "source": "https://semgrep.dev/r/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "SQL Injection"
          ]
        },
        "metavars": {
          "$DB": {
            "abstract_content": "models",
            "end": {
              "col": 11,
              "line": 11,
              "offset": 412
            },
            "start": {
              "col": 5,
              "line": 11,
              "offset": 406
            }
          },
          "$NEXT": {
            "abstract_content": "next",
            "end": {
              "col": 44,
              "line": 4,
              "offset": 134
            },
            "start": {
              "col": 40,
              "line": 4,
              "offset": 130
            }
          },
          "$QUERY": {
            "abstract_content": "`SELECT * FROM Products WHERE ((name LIKE '%criteria%' OR description LIKE '%criteria%') AND deletedAt IS NULL) ORDER BY name",
            "end": {
              "col": 159,
              "line": 11,
              "offset": 560
            },
            "start": {
              "col": 28,
              "line": 11,
              "offset": 429
            }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": {
              "col": 63,
              "line": 5,
              "offset": 217
            },
            "start": {
              "col": 60,
              "line": 5,
              "offset": 214
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 28,
              "line": 4,
              "offset": 118
            },
            "start": {
              "col": 25,
              "line": 4,
              "offset": 115
            }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "data/static/codefixes/dbSchemaChallenge_3.ts",
      "start": {
        "col": 28,
        "line": 11,
        "offset": 429
      }
    },
    {
      "check_id": "javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
      "end": {
        "col": 82,
        "line": 11,
        "offset": 483
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "criteria",
              "location": {
                "end": {
                  "col": 17,
                  "line": 5,
                  "offset": 171
                },
                "path": "data/static/codefixes/dbSchemaChallenge_3.ts",
                "start": {
                  "col": 9,
                  "line": 5,
                  "offset": 163
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 82,
                  "line": 11,
                  "offset": 483
                },
                "path": "data/static/codefixes/dbSchemaChallenge_3.ts",
                "start": {
                  "col": 74,
                  "line": 11,
                  "offset": 475
                }
              },
              "criteria"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 69,
                  "line": 5,
                  "offset": 223
                },
                "path": "data/static/codefixes/dbSchemaChallenge_3.ts",
                "start": {
                  "col": 60,
                  "line": 5,
                  "offset": 214
                }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "dabd344c5e9719f8dfae06af7680e1cb154778c1c1661d2f9b879d680585f3024864fc784fc0b213a4a2e2d93ec52adb392a7f9fb79abb8cf04eed36baad5971_0",
        "is_ignored": false,
        "lines": "    models.sequelize.query(`SELECT * FROM Products WHERE ((name LIKE '%${criteria}%' OR description LIKE '%${criteria}%') AND deletedAt IS NULL) ORDER BY name`)",
        "message": "Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using an object-relational mapper (ORM) such as Sequelize which will protect your queries.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/SQL_Injection"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 14715,
              "rule_id": "NbUNpr",
              "rv_id": 834108,
              "url": "https://semgrep.dev/playground/r/DkTG0jd/javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "DkTG0jd"
            }
          },
          "shortlink": "https://sg.run/66ZL",
          "source": "https://semgrep.dev/r/javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "SQL Injection"
          ]
        },
        "metavars": {
          "$1": {
            "abstract_content": "SELECT",
            "end": {
              "col": 7,
              "line": 1,
              "offset": 6
            },
            "start": {
              "col": 1,
              "line": 1,
              "offset": 0
            }
          },
          "$EXPR": {
            "abstract_content": "criteria",
            "end": {
              "col": 82,
              "line": 11,
              "offset": 483
            },
            "start": {
              "col": 74,
              "line": 11,
              "offset": 475
            }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": {
              "col": 63,
              "line": 5,
              "offset": 217
            },
            "start": {
              "col": 60,
              "line": 5,
              "offset": 214
            }
          },
          "$SQLSTR": {
            "abstract_content": "SELECT * FROM Products WHERE ((name LIKE '%",
            "end": {
              "col": 72,
              "line": 11,
              "offset": 473
            },
            "start": {
              "col": 29,
              "line": 11,
              "offset": 430
            }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "data/static/codefixes/dbSchemaChallenge_3.ts",
      "start": {
        "col": 74,
        "line": 11,
        "offset": 475
      }
    },
    {
      "check_id": "javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
      "end": {
        "col": 159,
        "line": 6,
        "offset": 467
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "criteria",
              "location": {
                "end": {
                  "col": 17,
                  "line": 3,
                  "offset": 126
                },
                "path": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                "start": {
                  "col": 9,
                  "line": 3,
                  "offset": 118
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 159,
                  "line": 6,
                  "offset": 467
                },
                "path": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                "start": {
                  "col": 28,
                  "line": 6,
                  "offset": 336
                }
              },
              "`SELECT * FROM Products WHERE ((name LIKE '%${criteria}%' OR description LIKE '%${criteria}%') AND deletedAt IS NULL) ORDER BY name"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 69,
                  "line": 3,
                  "offset": 178
                },
                "path": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                "start": {
                  "col": 60,
                  "line": 3,
                  "offset": 169
                }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "68ee178dbe58f781b2d43de36ca8e69a77939878c90876e25922769ef38429441be8eded69f44074b38e9a176e2c8dbb515131767ba2f80d3acce9c329deae72_0",
        "is_ignored": false,
        "lines": "    models.sequelize.query(`SELECT * FROM Products WHERE ((name LIKE '%${criteria}%' OR description LIKE '%${criteria}%') AND deletedAt IS NULL) ORDER BY name`)",
        "message": "Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://sequelize.org/docs/v6/core-concepts/raw-queries/#replacements"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 22085,
              "rule_id": "yyU0GX",
              "rv_id": 834186,
              "url": "https://semgrep.dev/playground/r/w8TAxwx/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
              "version_id": "w8TAxwx"
            }
          },
          "shortlink": "https://sg.run/gjoe",
          "source": "https://semgrep.dev/r/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "SQL Injection"
          ]
        },
        "metavars": {
          "$DB": {
            "abstract_content": "models",
            "end": {
              "col": 11,
              "line": 6,
              "offset": 319
            },
            "start": {
              "col": 5,
              "line": 6,
              "offset": 313
            }
          },
          "$NEXT": {
            "abstract_content": "next",
            "end": {
              "col": 44,
              "line": 2,
              "offset": 89
            },
            "start": {
              "col": 40,
              "line": 2,
              "offset": 85
            }
          },
          "$QUERY": {
            "abstract_content": "`SELECT * FROM Products WHERE ((name LIKE '%criteria%' OR description LIKE '%criteria%') AND deletedAt IS NULL) ORDER BY name",
            "end": {
              "col": 159,
              "line": 6,
              "offset": 467
            },
            "start": {
              "col": 28,
              "line": 6,
              "offset": 336
            }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": {
              "col": 63,
              "line": 3,
              "offset": 172
            },
            "start": {
              "col": 60,
              "line": 3,
              "offset": 169
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 28,
              "line": 2,
              "offset": 73
            },
            "start": {
              "col": 25,
              "line": 2,
              "offset": 70
            }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
      "start": {
        "col": 28,
        "line": 6,
        "offset": 336
      }
    },
    {
      "check_id": "javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
      "end": {
        "col": 82,
        "line": 6,
        "offset": 390
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "criteria",
              "location": {
                "end": {
                  "col": 17,
                  "line": 3,
                  "offset": 126
                },
                "path": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                "start": {
                  "col": 9,
                  "line": 3,
                  "offset": 118
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 82,
                  "line": 6,
                  "offset": 390
                },
                "path": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                "start": {
                  "col": 74,
                  "line": 6,
                  "offset": 382
                }
              },
              "criteria"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 69,
                  "line": 3,
                  "offset": 178
                },
                "path": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                "start": {
                  "col": 60,
                  "line": 3,
                  "offset": 169
                }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "b537962e8172bf1df5450c26fce4f0747802341cd981226e397ae3c16d1cd3f81dbedb05c2ccbe4c8a791faa1f58143f43e54ec2aa2fe6fd0247b9c70664645f_0",
        "is_ignored": false,
        "lines": "    models.sequelize.query(`SELECT * FROM Products WHERE ((name LIKE '%${criteria}%' OR description LIKE '%${criteria}%') AND deletedAt IS NULL) ORDER BY name`)",
        "message": "Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using an object-relational mapper (ORM) such as Sequelize which will protect your queries.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/SQL_Injection"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 14715,
              "rule_id": "NbUNpr",
              "rv_id": 834108,
              "url": "https://semgrep.dev/playground/r/DkTG0jd/javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "DkTG0jd"
            }
          },
          "shortlink": "https://sg.run/66ZL",
          "source": "https://semgrep.dev/r/javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "SQL Injection"
          ]
        },
        "metavars": {
          "$1": {
            "abstract_content": "SELECT",
            "end": {
              "col": 7,
              "line": 1,
              "offset": 6
            },
            "start": {
              "col": 1,
              "line": 1,
              "offset": 0
            }
          },
          "$EXPR": {
            "abstract_content": "criteria",
            "end": {
              "col": 82,
              "line": 6,
              "offset": 390
            },
            "start": {
              "col": 74,
              "line": 6,
              "offset": 382
            }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": {
              "col": 63,
              "line": 3,
              "offset": 172
            },
            "start": {
              "col": 60,
              "line": 3,
              "offset": 169
            }
          },
          "$SQLSTR": {
            "abstract_content": "SELECT * FROM Products WHERE ((name LIKE '%",
            "end": {
              "col": 72,
              "line": 6,
              "offset": 380
            },
            "start": {
              "col": 29,
              "line": 6,
              "offset": 337
            }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
      "start": {
        "col": 74,
        "line": 6,
        "offset": 382
      }
    },
    {
      "check_id": "javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
      "end": {
        "col": 159,
        "line": 10,
        "offset": 599
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "criteria",
              "location": {
                "end": {
                  "col": 17,
                  "line": 3,
                  "offset": 126
                },
                "path": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                "start": {
                  "col": 9,
                  "line": 3,
                  "offset": 118
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 159,
                  "line": 10,
                  "offset": 599
                },
                "path": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                "start": {
                  "col": 28,
                  "line": 10,
                  "offset": 468
                }
              },
              "`SELECT * FROM Products WHERE ((name LIKE '%${criteria}%' OR description LIKE '%${criteria}%') AND deletedAt IS NULL) ORDER BY name"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 69,
                  "line": 3,
                  "offset": 178
                },
                "path": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                "start": {
                  "col": 60,
                  "line": 3,
                  "offset": 169
                }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "1a9181d8de1aa222fc91e705cd7647a3698dfc4a64e7e64c18fa8e37725eb152473fa798ec9b48f28a3bedc8c7937ff6d931e6e481be2ced162543fced5c95f4_0",
        "is_ignored": false,
        "lines": "    models.sequelize.query(`SELECT * FROM Products WHERE ((name LIKE '%${criteria}%' OR description LIKE '%${criteria}%') AND deletedAt IS NULL) ORDER BY name`)",
        "message": "Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://sequelize.org/docs/v6/core-concepts/raw-queries/#replacements"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 22085,
              "rule_id": "yyU0GX",
              "rv_id": 834186,
              "url": "https://semgrep.dev/playground/r/w8TAxwx/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
              "version_id": "w8TAxwx"
            }
          },
          "shortlink": "https://sg.run/gjoe",
          "source": "https://semgrep.dev/r/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "SQL Injection"
          ]
        },
        "metavars": {
          "$DB": {
            "abstract_content": "models",
            "end": {
              "col": 11,
              "line": 10,
              "offset": 451
            },
            "start": {
              "col": 5,
              "line": 10,
              "offset": 445
            }
          },
          "$NEXT": {
            "abstract_content": "next",
            "end": {
              "col": 44,
              "line": 2,
              "offset": 89
            },
            "start": {
              "col": 40,
              "line": 2,
              "offset": 85
            }
          },
          "$QUERY": {
            "abstract_content": "`SELECT * FROM Products WHERE ((name LIKE '%criteria%' OR description LIKE '%criteria%') AND deletedAt IS NULL) ORDER BY name",
            "end": {
              "col": 159,
              "line": 10,
              "offset": 599
            },
            "start": {
              "col": 28,
              "line": 10,
              "offset": 468
            }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": {
              "col": 63,
              "line": 3,
              "offset": 172
            },
            "start": {
              "col": 60,
              "line": 3,
              "offset": 169
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 28,
              "line": 2,
              "offset": 73
            },
            "start": {
              "col": 25,
              "line": 2,
              "offset": 70
            }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
      "start": {
        "col": 28,
        "line": 10,
        "offset": 468
      }
    },
    {
      "check_id": "javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
      "end": {
        "col": 82,
        "line": 10,
        "offset": 522
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "criteria",
              "location": {
                "end": {
                  "col": 17,
                  "line": 3,
                  "offset": 126
                },
                "path": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                "start": {
                  "col": 9,
                  "line": 3,
                  "offset": 118
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 82,
                  "line": 10,
                  "offset": 522
                },
                "path": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                "start": {
                  "col": 74,
                  "line": 10,
                  "offset": 514
                }
              },
              "criteria"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 69,
                  "line": 3,
                  "offset": 178
                },
                "path": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                "start": {
                  "col": 60,
                  "line": 3,
                  "offset": 169
                }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "11b4b9b9512a71093d60c5236177e0df5e8fbad7bb0f766cff55edbef50cdfc914260978067509087fd0c6f0ee92196a277707259557775fafe444dbc8beff5e_0",
        "is_ignored": false,
        "lines": "    models.sequelize.query(`SELECT * FROM Products WHERE ((name LIKE '%${criteria}%' OR description LIKE '%${criteria}%') AND deletedAt IS NULL) ORDER BY name`)",
        "message": "Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using an object-relational mapper (ORM) such as Sequelize which will protect your queries.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/SQL_Injection"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 14715,
              "rule_id": "NbUNpr",
              "rv_id": 834108,
              "url": "https://semgrep.dev/playground/r/DkTG0jd/javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "DkTG0jd"
            }
          },
          "shortlink": "https://sg.run/66ZL",
          "source": "https://semgrep.dev/r/javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "SQL Injection"
          ]
        },
        "metavars": {
          "$1": {
            "abstract_content": "SELECT",
            "end": {
              "col": 7,
              "line": 1,
              "offset": 6
            },
            "start": {
              "col": 1,
              "line": 1,
              "offset": 0
            }
          },
          "$EXPR": {
            "abstract_content": "criteria",
            "end": {
              "col": 82,
              "line": 10,
              "offset": 522
            },
            "start": {
              "col": 74,
              "line": 10,
              "offset": 514
            }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": {
              "col": 63,
              "line": 3,
              "offset": 172
            },
            "start": {
              "col": 60,
              "line": 3,
              "offset": 169
            }
          },
          "$SQLSTR": {
            "abstract_content": "SELECT * FROM Products WHERE ((name LIKE '%",
            "end": {
              "col": 72,
              "line": 10,
              "offset": 512
            },
            "start": {
              "col": 29,
              "line": 10,
              "offset": 469
            }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
      "start": {
        "col": 74,
        "line": 10,
        "offset": 514
      }
    },
    {
      "check_id": "javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret",
      "end": {
        "col": 66,
        "line": 56,
        "offset": 2822
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "privateKey",
              "location": {
                "end": {
                  "col": 17,
                  "line": 23,
                  "offset": 815
                },
                "path": "lib/insecurity.ts",
                "start": {
                  "col": 7,
                  "line": 23,
                  "offset": 805
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 66,
                  "line": 56,
                  "offset": 2822
                },
                "path": "lib/insecurity.ts",
                "start": {
                  "col": 56,
                  "line": 56,
                  "offset": 2812
                }
              },
              "privateKey"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 902,
                  "line": 23,
                  "offset": 1700
                },
                "path": "lib/insecurity.ts",
                "start": {
                  "col": 7,
                  "line": 23,
                  "offset": 805
                }
              },
              "privateKey = '-----BEGIN RSA PRIVATE KEY-----\\r\\nMIICXAIBAAKBgQDNwqLEe9wgTXCbC7+RPdDbBbeqjdbs4kOPOIGzqLpXvJXlxxW8iMz0EaM4BKUqYsIa+ndv3NAn2RxCd5ubVdJJcX43zO6Ko0TFEZx/65gY3BE0O6syCEmUP4qbSd6exou/F+WTISzbQ5FBVPVmhnYhG/kpwt/cIxK5iUn5hm+4tQIDAQABAoGBAI+8xiPoOrA+KMnG/T4jJsG6TsHQcDHvJi7o1IKC/hnIXha0atTX5AUkRRce95qSfvKFweXdJXSQ0JMGJyfuXgU6dI0TcseFRfewXAa/ssxAC+iUVR6KUMh1PE2wXLitfeI6JLvVtrBYswm2I7CtY0q8n5AGimHWVXJPLfGV7m0BAkEA+fqFt2LXbLtyg6wZyxMA/cnmt5Nt3U2dAu77MzFJvibANUNHE4HPLZxjGNXN+a6m0K6TD4kDdh5HfUYLWWRBYQJBANK3carmulBwqzcDBjsJ0YrIONBpCAsXxk8idXb8jL9aNIg15Wumm2enqqObahDHB5jnGOLmbasizvSVqypfM9UCQCQl8xIqy+YgURXzXCN+kwUgHinrutZms87Jyi+D8Br8NY0+Nlf+zHvXAomD2W5CsEK7C+8SLBr3k/TsnRWHJuECQHFE9RA2OP8WoaLPuGCyFXaxzICThSRZYluVnWkZtxsBhW2W8z1b8PvWUE7kMy7TnkzeJS2LSnaNHoyxi7IaPQUCQCwWU4U+v4lD7uYBw00Ga/xt+7+UqFPlPVdz1yyr4q24Zxaw0LgmuEvgU5dycq8N7JxjTubX0MIRR+G9fmDBBl8=\\r\\n-----END RSA PRIVATE KEY-----'"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "a49b6df23d44cd84c24a0a46333b4f84c29344ebd6fc6983dc550cf5fbd28961e8d6e2ef41c00fc6ba2402f3d6970d98309fdad1dfcaa451c3046661ba13881a_0",
        "is_ignored": false,
        "lines": "export const authorize = (user = {}) => jwt.sign(user, privateKey, { expiresIn: '6h', algorithm: 'RS256' })",
        "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",
        "metadata": {
          "asvs": {
            "control_id": "3.5.2 Static API keys or secret",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v35-token-based-session-management",
            "section": "V3: Session Management Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "confidence": "HIGH",
          "cwe": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A07:2021 - Identification and Authentication Failures"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9300,
              "rule_id": "WAUon7",
              "rv_id": 834122,
              "url": "https://semgrep.dev/playground/r/1QTPLvy/javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret",
              "version_id": "1QTPLvy"
            }
          },
          "shortlink": "https://sg.run/4xN9",
          "source": "https://semgrep.dev/r/javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "jwt",
            "javascript",
            "secrets"
          ],
          "vulnerability_class": [
            "Hard-coded Secrets"
          ]
        },
        "metavars": {
          "$DATA": {
            "abstract_content": "user",
            "end": {
              "col": 54,
              "line": 56,
              "offset": 2810
            },
            "start": {
              "col": 50,
              "line": 56,
              "offset": 2806
            }
          },
          "$JWT": {
            "abstract_content": "jwt",
            "end": {
              "col": 44,
              "line": 56,
              "offset": 2800
            },
            "start": {
              "col": 41,
              "line": 56,
              "offset": 2797
            }
          },
          "$VALUE": {
            "abstract_content": "privateKey",
            "end": {
              "col": 66,
              "line": 56,
              "offset": 2822
            },
            "propagated_value": {
              "svalue_abstract_content": "'-----BEGIN RSA PRIVATE KEY-----\\r\\nMIICXAIBAAKBgQDNwqLEe9wgTXCbC7+RPdDbBbeqjdbs4kOPOIGzqLpXvJXlxxW8iMz0EaM4BKUqYsIa+ndv3NAn2RxCd5ubVdJJcX43zO6Ko0TFEZx/65gY3BE0O6syCEmUP4qbSd6exou/F+WTISzbQ5FBVPVmhnYhG/kpwt/cIxK5iUn5hm+4tQIDAQABAoGBAI+8xiPoOrA+KMnG/T4jJsG6TsHQcDHvJi7o1IKC/hnIXha0atTX5AUkRRce95qSfvKFweXdJXSQ0JMGJyfuXgU6dI0TcseFRfewXAa/ssxAC+iUVR6KUMh1PE2wXLitfeI6JLvVtrBYswm2I7CtY0q8n5AGimHWVXJPLfGV7m0BAkEA+fqFt2LXbLtyg6wZyxMA/cnmt5Nt3U2dAu77MzFJvibANUNHE4HPLZxjGNXN+a6m0K6TD4kDdh5HfUYLWWRBYQJBANK3carmulBwqzcDBjsJ0YrIONBpCAsXxk8idXb8jL9aNIg15Wumm2enqqObahDHB5jnGOLmbasizvSVqypfM9UCQCQl8xIqy+YgURXzXCN+kwUgHinrutZms87Jyi+D8Br8NY0+Nlf+zHvXAomD2W5CsEK7C+8SLBr3k/TsnRWHJuECQHFE9RA2OP8WoaLPuGCyFXaxzICThSRZYluVnWkZtxsBhW2W8z1b8PvWUE7kMy7TnkzeJS2LSnaNHoyxi7IaPQUCQCwWU4U+v4lD7uYBw00Ga/xt+7+UqFPlPVdz1yyr4q24Zxaw0LgmuEvgU5dycq8N7JxjTubX0MIRR+G9fmDBBl8=\\r\\n-----END RSA PRIVATE KEY-----'",
              "svalue_end": {
                "col": 902,
                "line": 23,
                "offset": 1700
              },
              "svalue_start": {
                "col": 20,
                "line": 23,
                "offset": 818
              }
            },
            "start": {
              "col": 56,
              "line": 56,
              "offset": 2812
            }
          },
          "$X": {
            "abstract_content": "privateKey",
            "end": {
              "col": 17,
              "line": 23,
              "offset": 815
            },
            "start": {
              "col": 7,
              "line": 23,
              "offset": 805
            }
          },
          "$Y": {
            "abstract_content": "-----BEGIN RSA PRIVATE KEY-----\\r\\nMIICXAIBAAKBgQDNwqLEe9wgTXCbC7+RPdDbBbeqjdbs4kOPOIGzqLpXvJXlxxW8iMz0EaM4BKUqYsIa+ndv3NAn2RxCd5ubVdJJcX43zO6Ko0TFEZx/65gY3BE0O6syCEmUP4qbSd6exou/F+WTISzbQ5FBVPVmhnYhG/kpwt/cIxK5iUn5hm+4tQIDAQABAoGBAI+8xiPoOrA+KMnG/T4jJsG6TsHQcDHvJi7o1IKC/hnIXha0atTX5AUkRRce95qSfvKFweXdJXSQ0JMGJyfuXgU6dI0TcseFRfewXAa/ssxAC+iUVR6KUMh1PE2wXLitfeI6JLvVtrBYswm2I7CtY0q8n5AGimHWVXJPLfGV7m0BAkEA+fqFt2LXbLtyg6wZyxMA/cnmt5Nt3U2dAu77MzFJvibANUNHE4HPLZxjGNXN+a6m0K6TD4kDdh5HfUYLWWRBYQJBANK3carmulBwqzcDBjsJ0YrIONBpCAsXxk8idXb8jL9aNIg15Wumm2enqqObahDHB5jnGOLmbasizvSVqypfM9UCQCQl8xIqy+YgURXzXCN+kwUgHinrutZms87Jyi+D8Br8NY0+Nlf+zHvXAomD2W5CsEK7C+8SLBr3k/TsnRWHJuECQHFE9RA2OP8WoaLPuGCyFXaxzICThSRZYluVnWkZtxsBhW2W8z1b8PvWUE7kMy7TnkzeJS2LSnaNHoyxi7IaPQUCQCwWU4U+v4lD7uYBw00Ga/xt+7+UqFPlPVdz1yyr4q24Zxaw0LgmuEvgU5dycq8N7JxjTubX0MIRR+G9fmDBBl8=\\r\\n-----END RSA PRIVATE KEY-----",
            "end": {
              "col": 901,
              "line": 23,
              "offset": 1699
            },
            "start": {
              "col": 21,
              "line": 23,
              "offset": 819
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "lib/insecurity.ts",
      "start": {
        "col": 56,
        "line": 56,
        "offset": 2812
      }
    },
    {
      "check_id": "javascript.express.security.injection.raw-html-format.raw-html-format",
      "end": {
        "col": 56,
        "line": 198,
        "offset": 6156
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "token",
              "location": {
                "end": {
                  "col": 16,
                  "line": 167,
                  "offset": 5333
                },
                "path": "routes/chatbot.ts",
                "start": {
                  "col": 11,
                  "line": 167,
                  "offset": 5328
                }
              }
            },
            {
              "content": "user",
              "location": {
                "end": {
                  "col": 15,
                  "line": 176,
                  "offset": 5614
                },
                "path": "routes/chatbot.ts",
                "start": {
                  "col": 11,
                  "line": 176,
                  "offset": 5610
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 56,
                  "line": 198,
                  "offset": 6156
                },
                "path": "routes/chatbot.ts",
                "start": {
                  "col": 46,
                  "line": 198,
                  "offset": 6146
                }
              },
              "`${user.id"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 30,
                  "line": 167,
                  "offset": 5347
                },
                "path": "routes/chatbot.ts",
                "start": {
                  "col": 19,
                  "line": 167,
                  "offset": 5336
                }
              },
              "req.cookies"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "17cfbf6576d90fc31a5be64eb6e83ef672fee902fb325e28c9fe69d8e1fd7349e4fa38e12eb87765c414e756c5c86bf03458d7f585d69c877e9c255e828df272_0",
        "is_ignored": false,
        "lines": "        body: bot.training.state ? bot.greet(`${user.id}`) : `${config.get<string>('application.chatBot.name')} isn't ready at the moment, please wait while I set things up`",
        "message": "User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 14691,
              "rule_id": "5rUL0X",
              "rv_id": 834107,
              "url": "https://semgrep.dev/playground/r/BjTe0Z2/javascript.express.security.injection.raw-html-format.raw-html-format",
              "version_id": "BjTe0Z2"
            }
          },
          "shortlink": "https://sg.run/5DO3",
          "source": "https://semgrep.dev/r/javascript.express.security.injection.raw-html-format.raw-html-format",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "Cross-Site-Scripting (XSS)"
          ]
        },
        "metavars": {
          "$NEXT": {
            "abstract_content": "next",
            "end": {
              "col": 50,
              "line": 159,
              "offset": 5067
            },
            "start": {
              "col": 46,
              "line": 159,
              "offset": 5063
            }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": {
              "col": 22,
              "line": 167,
              "offset": 5339
            },
            "start": {
              "col": 19,
              "line": 167,
              "offset": 5336
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 34,
              "line": 159,
              "offset": 5051
            },
            "start": {
              "col": 31,
              "line": 159,
              "offset": 5048
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "routes/chatbot.ts",
      "start": {
        "col": 46,
        "line": 198,
        "offset": 6146
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal",
      "end": {
        "col": 60,
        "line": 69,
        "offset": 2329
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 60,
                  "line": 69,
                  "offset": 2329
                },
                "path": "routes/dataErasure.ts",
                "start": {
                  "col": 45,
                  "line": 69,
                  "offset": 2314
                }
              },
              "req.body.layout"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 53,
                  "line": 69,
                  "offset": 2322
                },
                "path": "routes/dataErasure.ts",
                "start": {
                  "col": 45,
                  "line": 69,
                  "offset": 2314
                }
              },
              "req.body"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "d9646d5b70dc0f1cfaf65c4f780b4838b32f18a2551abec56de0f7eb5a2db13c4ecd0700d7bb9ed42edae19e1b1dfbac66be3feb6ce9d4f82157afc53f03c188_0",
        "is_ignored": false,
        "lines": "      const filePath: string = path.resolve(req.body.layout).toLowerCase()",
        "message": "Possible writing outside of the destination, make sure that the target path is nested in the intended destination",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A05:2017 - Broken Access Control",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/Path_Traversal"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9273,
              "rule_id": "L1Uyb8",
              "rv_id": 834072,
              "url": "https://semgrep.dev/playground/r/o5TBED2/javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal",
              "version_id": "o5TBED2"
            }
          },
          "shortlink": "https://sg.run/weRn",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express",
            "node.js"
          ],
          "vulnerability_class": [
            "Path Traversal"
          ]
        },
        "metavars": {
          "$1": {
            "abstract_content": "post",
            "end": {
              "col": 5,
              "line": 1,
              "offset": 4
            },
            "start": {
              "col": 1,
              "line": 1,
              "offset": 0
            }
          },
          "$APP": {
            "abstract_content": "router",
            "end": {
              "col": 7,
              "line": 54,
              "offset": 1736
            },
            "propagated_value": {
              "svalue_abstract_content": "express.Router()",
              "svalue_end": {
                "col": 32,
                "line": 15,
                "offset": 646
              },
              "svalue_start": {
                "col": 16,
                "line": 15,
                "offset": 630
              }
            },
            "start": {
              "col": 1,
              "line": 54,
              "offset": 1730
            }
          },
          "$METHOD": {
            "abstract_content": "post",
            "end": {
              "col": 12,
              "line": 54,
              "offset": 1741
            },
            "start": {
              "col": 8,
              "line": 54,
              "offset": 1737
            }
          },
          "$NEXT": {
            "abstract_content": "next",
            "end": {
              "col": 134,
              "line": 54,
              "offset": 1863
            },
            "start": {
              "col": 130,
              "line": 54,
              "offset": 1859
            }
          },
          "$PATH": {
            "abstract_content": "path",
            "end": {
              "col": 36,
              "line": 69,
              "offset": 2305
            },
            "start": {
              "col": 32,
              "line": 69,
              "offset": 2301
            }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": {
              "col": 48,
              "line": 69,
              "offset": 2317
            },
            "start": {
              "col": 45,
              "line": 69,
              "offset": 2314
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 118,
              "line": 54,
              "offset": 1847
            },
            "start": {
              "col": 115,
              "line": 54,
              "offset": 1844
            }
          },
          "$SINK": {
            "abstract_content": "req.body.layout",
            "end": {
              "col": 60,
              "line": 69,
              "offset": 2329
            },
            "start": {
              "col": 45,
              "line": 69,
              "offset": 2314
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "routes/dataErasure.ts",
      "start": {
        "col": 45,
        "line": 69,
        "offset": 2314
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
      "end": {
        "col": 46,
        "line": 33,
        "offset": 1180
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 46,
                  "line": 33,
                  "offset": 1180
                },
                "path": "routes/fileServer.ts",
                "start": {
                  "col": 20,
                  "line": 33,
                  "offset": 1154
                }
              },
              "path.resolve('ftp/', file)"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 4,
                  "line": 38,
                  "offset": 1288
                },
                "path": "routes/fileServer.ts",
                "start": {
                  "col": 3,
                  "line": 26,
                  "offset": 747
                }
              },
              "function verify (file: string, res: Response, next: NextFunction) {\n    if (file && (endsWithAllowlistedFileType(file) || (file === 'incident-support.kdbx'))) {\n      file = security.cutOffPoisonNullByte(file)\n\n      challengeUtils.solveIf(challenges.directoryListingChallenge, () => { return file.toLowerCase() === 'acquisitions.md' })\n      verifySuccessfulPoisonNullByteExploit(file)\n\n      res.sendFile(path.resolve('ftp/', file))\n    } else {\n      res.status(403)\n      next(new Error('Only .md and .pdf files are allowed!'))\n    }\n  }"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "33b7141eed49238da420ec9577803fb8853ce0c26f5dbccf88323265a789cf24f5c8147d6baf6b15c489dd2b1b36fefae7843207e9f3f8e0af88de44306e520a_0",
        "is_ignored": false,
        "lines": "      res.sendFile(path.resolve('ftp/', file))",
        "message": "The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-73: External Control of File Name or Path"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A04:2021 - Insecure Design"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 22082,
              "rule_id": "j2UzDx",
              "rv_id": 834073,
              "url": "https://semgrep.dev/playground/r/zyTWJ2W/javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
              "version_id": "zyTWJ2W"
            }
          },
          "shortlink": "https://sg.run/7DJk",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "Path Traversal"
          ]
        },
        "metavars": {
          "$1": {
            "abstract_content": "string",
            "end": {
              "col": 7,
              "line": 1,
              "offset": 6
            },
            "start": {
              "col": 1,
              "line": 1,
              "offset": 0
            }
          },
          "$METH": {
            "abstract_content": "sendFile",
            "end": {
              "col": 19,
              "line": 33,
              "offset": 1153
            },
            "start": {
              "col": 11,
              "line": 33,
              "offset": 1145
            }
          },
          "$QUERY": {
            "abstract_content": "path.resolve('ftp/'file)",
            "end": {
              "col": 46,
              "line": 33,
              "offset": 1180
            },
            "start": {
              "col": 20,
              "line": 33,
              "offset": 1154
            }
          },
          "$REQ": {
            "abstract_content": "file",
            "end": {
              "col": 24,
              "line": 26,
              "offset": 768
            },
            "start": {
              "col": 20,
              "line": 26,
              "offset": 764
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 10,
              "line": 33,
              "offset": 1144
            },
            "start": {
              "col": 7,
              "line": 33,
              "offset": 1141
            }
          },
          "$TYPE": {
            "abstract_content": "string",
            "end": {
              "col": 32,
              "line": 26,
              "offset": 776
            },
            "start": {
              "col": 26,
              "line": 26,
              "offset": 770
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "routes/fileServer.ts",
      "start": {
        "col": 20,
        "line": 33,
        "offset": 1154
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
      "end": {
        "col": 57,
        "line": 14,
        "offset": 458
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "params",
              "location": {
                "end": {
                  "col": 19,
                  "line": 10,
                  "offset": 288
                },
                "path": "routes/keyServer.ts",
                "start": {
                  "col": 13,
                  "line": 10,
                  "offset": 282
                }
              }
            },
            {
              "content": "file",
              "location": {
                "end": {
                  "col": 15,
                  "line": 11,
                  "offset": 355
                },
                "path": "routes/keyServer.ts",
                "start": {
                  "col": 11,
                  "line": 11,
                  "offset": 351
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 57,
                  "line": 14,
                  "offset": 458
                },
                "path": "routes/keyServer.ts",
                "start": {
                  "col": 20,
                  "line": 14,
                  "offset": 421
                }
              },
              "path.resolve('encryptionkeys/', file)"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 19,
                  "line": 10,
                  "offset": 288
                },
                "path": "routes/keyServer.ts",
                "start": {
                  "col": 13,
                  "line": 10,
                  "offset": 282
                }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "169fd21661d97adbf183e909974bcc252fa19a91d68176a8e888d61c2e5283b516ae384c4576ecb09d96af8f1fcb4c5f99af3db7af83ec34f5fc9f11ecd9c927_0",
        "is_ignored": false,
        "lines": "      res.sendFile(path.resolve('encryptionkeys/', file))",
        "message": "The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-73: External Control of File Name or Path"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A04:2021 - Insecure Design"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 22082,
              "rule_id": "j2UzDx",
              "rv_id": 834073,
              "url": "https://semgrep.dev/playground/r/zyTWJ2W/javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
              "version_id": "zyTWJ2W"
            }
          },
          "shortlink": "https://sg.run/7DJk",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "Path Traversal"
          ]
        },
        "metavars": {
          "$1": {
            "abstract_content": "sendFile",
            "end": {
              "col": 9,
              "line": 1,
              "offset": 8
            },
            "start": {
              "col": 1,
              "line": 1,
              "offset": 0
            }
          },
          "$METH": {
            "abstract_content": "sendFile",
            "end": {
              "col": 19,
              "line": 14,
              "offset": 420
            },
            "start": {
              "col": 11,
              "line": 14,
              "offset": 412
            }
          },
          "$NEXT": {
            "abstract_content": "next",
            "end": {
              "col": 51,
              "line": 10,
              "offset": 320
            },
            "start": {
              "col": 47,
              "line": 10,
              "offset": 316
            }
          },
          "$QUERY": {
            "abstract_content": "path.resolve('encryptionkeys/'file)",
            "end": {
              "col": 57,
              "line": 14,
              "offset": 458
            },
            "start": {
              "col": 20,
              "line": 14,
              "offset": 421
            }
          },
          "$REQ": {
            "abstract_content": "params",
            "end": {
              "col": 19,
              "line": 10,
              "offset": 288
            },
            "start": {
              "col": 13,
              "line": 10,
              "offset": 282
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 35,
              "line": 10,
              "offset": 304
            },
            "start": {
              "col": 32,
              "line": 10,
              "offset": 301
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "routes/keyServer.ts",
      "start": {
        "col": 20,
        "line": 14,
        "offset": 421
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal",
      "end": {
        "col": 56,
        "line": 14,
        "offset": 457
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "params",
              "location": {
                "end": {
                  "col": 19,
                  "line": 10,
                  "offset": 288
                },
                "path": "routes/keyServer.ts",
                "start": {
                  "col": 13,
                  "line": 10,
                  "offset": 282
                }
              }
            },
            {
              "content": "file",
              "location": {
                "end": {
                  "col": 15,
                  "line": 11,
                  "offset": 355
                },
                "path": "routes/keyServer.ts",
                "start": {
                  "col": 11,
                  "line": 11,
                  "offset": 351
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 56,
                  "line": 14,
                  "offset": 457
                },
                "path": "routes/keyServer.ts",
                "start": {
                  "col": 52,
                  "line": 14,
                  "offset": 453
                }
              },
              "file"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 19,
                  "line": 10,
                  "offset": 288
                },
                "path": "routes/keyServer.ts",
                "start": {
                  "col": 13,
                  "line": 10,
                  "offset": 282
                }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "61ff0ef3a6438f8e69ef8457e3f95f844787ad58ef6a9b2a93dc684a1504d223617e6708689b4ece9b8a784fdacc6357e52220b0226dae233c0aadd44003b493_0",
        "is_ignored": false,
        "lines": "      res.sendFile(path.resolve('encryptionkeys/', file))",
        "message": "Possible writing outside of the destination, make sure that the target path is nested in the intended destination",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A05:2017 - Broken Access Control",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/Path_Traversal"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9273,
              "rule_id": "L1Uyb8",
              "rv_id": 834072,
              "url": "https://semgrep.dev/playground/r/o5TBED2/javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal",
              "version_id": "o5TBED2"
            }
          },
          "shortlink": "https://sg.run/weRn",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express",
            "node.js"
          ],
          "vulnerability_class": [
            "Path Traversal"
          ]
        },
        "metavars": {
          "$NEXT": {
            "abstract_content": "next",
            "end": {
              "col": 51,
              "line": 10,
              "offset": 320
            },
            "start": {
              "col": 47,
              "line": 10,
              "offset": 316
            }
          },
          "$REQ": {
            "abstract_content": "params",
            "end": {
              "col": 19,
              "line": 10,
              "offset": 288
            },
            "start": {
              "col": 13,
              "line": 10,
              "offset": 282
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 35,
              "line": 10,
              "offset": 304
            },
            "start": {
              "col": 32,
              "line": 10,
              "offset": 301
            }
          },
          "$SINK": {
            "abstract_content": "file",
            "end": {
              "col": 56,
              "line": 14,
              "offset": 457
            },
            "propagated_value": {
              "svalue_abstract_content": "params.file",
              "svalue_end": {
                "col": 29,
                "line": 11,
                "offset": 369
              },
              "svalue_start": {
                "col": 18,
                "line": 11,
                "offset": 358
              }
            },
            "start": {
              "col": 52,
              "line": 14,
              "offset": 453
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "routes/keyServer.ts",
      "start": {
        "col": 52,
        "line": 14,
        "offset": 453
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
      "end": {
        "col": 47,
        "line": 14,
        "offset": 448
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "params",
              "location": {
                "end": {
                  "col": 19,
                  "line": 10,
                  "offset": 288
                },
                "path": "routes/logfileServer.ts",
                "start": {
                  "col": 13,
                  "line": 10,
                  "offset": 282
                }
              }
            },
            {
              "content": "file",
              "location": {
                "end": {
                  "col": 15,
                  "line": 11,
                  "offset": 355
                },
                "path": "routes/logfileServer.ts",
                "start": {
                  "col": 11,
                  "line": 11,
                  "offset": 351
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 47,
                  "line": 14,
                  "offset": 448
                },
                "path": "routes/logfileServer.ts",
                "start": {
                  "col": 20,
                  "line": 14,
                  "offset": 421
                }
              },
              "path.resolve('logs/', file)"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 19,
                  "line": 10,
                  "offset": 288
                },
                "path": "routes/logfileServer.ts",
                "start": {
                  "col": 13,
                  "line": 10,
                  "offset": 282
                }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "961a9260d800a2bb91582c6046728dc167574254fcc85628c7c79a7fd47557c3587663de55a9715bcf22c43160119c80d17b890e7a12090b6b091eb77fd2750e_0",
        "is_ignored": false,
        "lines": "      res.sendFile(path.resolve('logs/', file))",
        "message": "The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-73: External Control of File Name or Path"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A04:2021 - Insecure Design"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 22082,
              "rule_id": "j2UzDx",
              "rv_id": 834073,
              "url": "https://semgrep.dev/playground/r/zyTWJ2W/javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
              "version_id": "zyTWJ2W"
            }
          },
          "shortlink": "https://sg.run/7DJk",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "Path Traversal"
          ]
        },
        "metavars": {
          "$1": {
            "abstract_content": "sendFile",
            "end": {
              "col": 9,
              "line": 1,
              "offset": 8
            },
            "start": {
              "col": 1,
              "line": 1,
              "offset": 0
            }
          },
          "$METH": {
            "abstract_content": "sendFile",
            "end": {
              "col": 19,
              "line": 14,
              "offset": 420
            },
            "start": {
              "col": 11,
              "line": 14,
              "offset": 412
            }
          },
          "$NEXT": {
            "abstract_content": "next",
            "end": {
              "col": 51,
              "line": 10,
              "offset": 320
            },
            "start": {
              "col": 47,
              "line": 10,
              "offset": 316
            }
          },
          "$QUERY": {
            "abstract_content": "path.resolve('logs/'file)",
            "end": {
              "col": 47,
              "line": 14,
              "offset": 448
            },
            "start": {
              "col": 20,
              "line": 14,
              "offset": 421
            }
          },
          "$REQ": {
            "abstract_content": "params",
            "end": {
              "col": 19,
              "line": 10,
              "offset": 288
            },
            "start": {
              "col": 13,
              "line": 10,
              "offset": 282
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 35,
              "line": 10,
              "offset": 304
            },
            "start": {
              "col": 32,
              "line": 10,
              "offset": 301
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "routes/logfileServer.ts",
      "start": {
        "col": 20,
        "line": 14,
        "offset": 421
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal",
      "end": {
        "col": 46,
        "line": 14,
        "offset": 447
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "params",
              "location": {
                "end": {
                  "col": 19,
                  "line": 10,
                  "offset": 288
                },
                "path": "routes/logfileServer.ts",
                "start": {
                  "col": 13,
                  "line": 10,
                  "offset": 282
                }
              }
            },
            {
              "content": "file",
              "location": {
                "end": {
                  "col": 15,
                  "line": 11,
                  "offset": 355
                },
                "path": "routes/logfileServer.ts",
                "start": {
                  "col": 11,
                  "line": 11,
                  "offset": 351
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 46,
                  "line": 14,
                  "offset": 447
                },
                "path": "routes/logfileServer.ts",
                "start": {
                  "col": 42,
                  "line": 14,
                  "offset": 443
                }
              },
              "file"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 19,
                  "line": 10,
                  "offset": 288
                },
                "path": "routes/logfileServer.ts",
                "start": {
                  "col": 13,
                  "line": 10,
                  "offset": 282
                }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "b006dd478b7c4c3e581ffefa653e2acc49ff508e726936cf55711b71057a86100d2a66b55e0d7b9b04e48aad88892b8b168b8825d679db573dd93efd650d76d8_0",
        "is_ignored": false,
        "lines": "      res.sendFile(path.resolve('logs/', file))",
        "message": "Possible writing outside of the destination, make sure that the target path is nested in the intended destination",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A05:2017 - Broken Access Control",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/Path_Traversal"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9273,
              "rule_id": "L1Uyb8",
              "rv_id": 834072,
              "url": "https://semgrep.dev/playground/r/o5TBED2/javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal",
              "version_id": "o5TBED2"
            }
          },
          "shortlink": "https://sg.run/weRn",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express",
            "node.js"
          ],
          "vulnerability_class": [
            "Path Traversal"
          ]
        },
        "metavars": {
          "$NEXT": {
            "abstract_content": "next",
            "end": {
              "col": 51,
              "line": 10,
              "offset": 320
            },
            "start": {
              "col": 47,
              "line": 10,
              "offset": 316
            }
          },
          "$REQ": {
            "abstract_content": "params",
            "end": {
              "col": 19,
              "line": 10,
              "offset": 288
            },
            "start": {
              "col": 13,
              "line": 10,
              "offset": 282
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 35,
              "line": 10,
              "offset": 304
            },
            "start": {
              "col": 32,
              "line": 10,
              "offset": 301
            }
          },
          "$SINK": {
            "abstract_content": "file",
            "end": {
              "col": 46,
              "line": 14,
              "offset": 447
            },
            "propagated_value": {
              "svalue_abstract_content": "params.file",
              "svalue_end": {
                "col": 29,
                "line": 11,
                "offset": 369
              },
              "svalue_start": {
                "col": 18,
                "line": 11,
                "offset": 358
              }
            },
            "start": {
              "col": 42,
              "line": 14,
              "offset": 443
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "routes/logfileServer.ts",
      "start": {
        "col": 42,
        "line": 14,
        "offset": 443
      }
    },
    {
      "check_id": "javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
      "end": {
        "col": 169,
        "line": 36,
        "offset": 1655
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 169,
                  "line": 36,
                  "offset": 1655
                },
                "path": "routes/login.ts",
                "start": {
                  "col": 28,
                  "line": 36,
                  "offset": 1514
                }
              },
              "`SELECT * FROM Users WHERE email = '${req.body.email || ''}' AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 74,
                  "line": 36,
                  "offset": 1560
                },
                "path": "routes/login.ts",
                "start": {
                  "col": 66,
                  "line": 36,
                  "offset": 1552
                }
              },
              "req.body"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "eddeedb9d7b92de284db849dde09cb92bbf70d79bbccdbfcbe4afefa3453b08a168120add4e27289a60190707c286b16e61dd9c57feb1988e62e8f89d93669aa_0",
        "is_ignored": false,
        "lines": "    models.sequelize.query(`SELECT * FROM Users WHERE email = '${req.body.email || ''}' AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`, { model: UserModel, plain: true }) // vuln-code-snippet vuln-line loginAdminChallenge loginBenderChallenge loginJimChallenge",
        "message": "Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://sequelize.org/docs/v6/core-concepts/raw-queries/#replacements"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 22085,
              "rule_id": "yyU0GX",
              "rv_id": 834186,
              "url": "https://semgrep.dev/playground/r/w8TAxwx/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
              "version_id": "w8TAxwx"
            }
          },
          "shortlink": "https://sg.run/gjoe",
          "source": "https://semgrep.dev/r/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "SQL Injection"
          ]
        },
        "metavars": {
          "$DB": {
            "abstract_content": "models",
            "end": {
              "col": 11,
              "line": 36,
              "offset": 1497
            },
            "start": {
              "col": 5,
              "line": 36,
              "offset": 1491
            }
          },
          "$NEXT": {
            "abstract_content": "next",
            "end": {
              "col": 44,
              "line": 34,
              "offset": 1401
            },
            "start": {
              "col": 40,
              "line": 34,
              "offset": 1397
            }
          },
          "$QUERY": {
            "abstract_content": "`SELECT * FROM Users WHERE email = 'req.body.email||''' AND password = 'security.hash(req.body.password||'')' AND deletedAt IS NULL",
            "end": {
              "col": 169,
              "line": 36,
              "offset": 1655
            },
            "start": {
              "col": 28,
              "line": 36,
              "offset": 1514
            }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": {
              "col": 69,
              "line": 36,
              "offset": 1555
            },
            "start": {
              "col": 66,
              "line": 36,
              "offset": 1552
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 28,
              "line": 34,
              "offset": 1385
            },
            "start": {
              "col": 25,
              "line": 34,
              "offset": 1382
            }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "routes/login.ts",
      "start": {
        "col": 28,
        "line": 36,
        "offset": 1514
      }
    },
    {
      "check_id": "javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
      "end": {
        "col": 86,
        "line": 36,
        "offset": 1572
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 86,
                  "line": 36,
                  "offset": 1572
                },
                "path": "routes/login.ts",
                "start": {
                  "col": 66,
                  "line": 36,
                  "offset": 1552
                }
              },
              "req.body.email || ''"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 74,
                  "line": 36,
                  "offset": 1560
                },
                "path": "routes/login.ts",
                "start": {
                  "col": 66,
                  "line": 36,
                  "offset": 1552
                }
              },
              "req.body"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "3eda57581faf9a82db83460d918f4e5b67df9dacf49f0ca0e65f80645bdc2fdb5967744cb68fe61de21afeed495c581b341c5a96425a35897bfca8518b790e10_0",
        "is_ignored": false,
        "lines": "    models.sequelize.query(`SELECT * FROM Users WHERE email = '${req.body.email || ''}' AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`, { model: UserModel, plain: true }) // vuln-code-snippet vuln-line loginAdminChallenge loginBenderChallenge loginJimChallenge",
        "message": "Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using an object-relational mapper (ORM) such as Sequelize which will protect your queries.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/SQL_Injection"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 14715,
              "rule_id": "NbUNpr",
              "rv_id": 834108,
              "url": "https://semgrep.dev/playground/r/DkTG0jd/javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "DkTG0jd"
            }
          },
          "shortlink": "https://sg.run/66ZL",
          "source": "https://semgrep.dev/r/javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "SQL Injection"
          ]
        },
        "metavars": {
          "$1": {
            "abstract_content": "SELECT",
            "end": {
              "col": 7,
              "line": 1,
              "offset": 6
            },
            "start": {
              "col": 1,
              "line": 1,
              "offset": 0
            }
          },
          "$EXPR": {
            "abstract_content": "req.body.email||''",
            "end": {
              "col": 86,
              "line": 36,
              "offset": 1572
            },
            "start": {
              "col": 66,
              "line": 36,
              "offset": 1552
            }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": {
              "col": 69,
              "line": 36,
              "offset": 1555
            },
            "start": {
              "col": 66,
              "line": 36,
              "offset": 1552
            }
          },
          "$SQLSTR": {
            "abstract_content": "SELECT * FROM Users WHERE email = '",
            "end": {
              "col": 64,
              "line": 36,
              "offset": 1550
            },
            "start": {
              "col": 29,
              "line": 36,
              "offset": 1515
            }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "routes/login.ts",
      "start": {
        "col": 66,
        "line": 36,
        "offset": 1552
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-ssrf.express-ssrf",
      "end": {
        "col": 19,
        "line": 23,
        "offset": 884
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "url",
              "location": {
                "end": {
                  "col": 16,
                  "line": 18,
                  "offset": 594
                },
                "path": "routes/profileImageUrlUpload.ts",
                "start": {
                  "col": 13,
                  "line": 18,
                  "offset": 591
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 19,
                  "line": 23,
                  "offset": 884
                },
                "path": "routes/profileImageUrlUpload.ts",
                "start": {
                  "col": 16,
                  "line": 23,
                  "offset": 881
                }
              },
              "url"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 27,
                  "line": 18,
                  "offset": 605
                },
                "path": "routes/profileImageUrlUpload.ts",
                "start": {
                  "col": 19,
                  "line": 18,
                  "offset": 597
                }
              },
              "req.body"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "ed8c9c010a8fcf039af83ee959f95f90a19f060d498c289b67f6c1e89e86573ac8762f43b37e7c8f73ba0459470dd780cbfc28d74a1b74a5982160fac68c2503_0",
        "is_ignored": false,
        "lines": "          .get(url)",
        "message": "The following request request.get() was found to be crafted from user-input `req` which can lead to Server-Side Request Forgery (SSRF) vulnerabilities. It is recommended where possible to not allow user-input to craft the base request, but to be treated as part of the path or query parameter. When user-input is necessary to craft the request, it is recommeneded to follow OWASP best practices to prevent abuse. ",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-918: Server-Side Request Forgery (SSRF)"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A10:2021 - Server-Side Request Forgery (SSRF)"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Server_Side_Request_Forgery_Prevention_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 22554,
              "rule_id": "eqU9l2",
              "rv_id": 834075,
              "url": "https://semgrep.dev/playground/r/2KT7x2Y/javascript.express.security.audit.express-ssrf.express-ssrf",
              "version_id": "2KT7x2Y"
            }
          },
          "shortlink": "https://sg.run/0PNw",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-ssrf.express-ssrf",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "Server-Side Request Forgery (SSRF)"
          ]
        },
        "metavars": {
          "$1": {
            "abstract_content": "get",
            "end": {
              "col": 4,
              "line": 1,
              "offset": 3
            },
            "start": {
              "col": 1,
              "line": 1,
              "offset": 0
            }
          },
          "$ASSIGN": {
            "abstract_content": "url",
            "end": {
              "col": 19,
              "line": 23,
              "offset": 884
            },
            "propagated_value": {
              "svalue_abstract_content": "req.body.imageUrl",
              "svalue_end": {
                "col": 36,
                "line": 18,
                "offset": 614
              },
              "svalue_start": {
                "col": 19,
                "line": 18,
                "offset": 597
              }
            },
            "start": {
              "col": 16,
              "line": 23,
              "offset": 881
            }
          },
          "$METHOD": {
            "abstract_content": "get",
            "end": {
              "col": 15,
              "line": 23,
              "offset": 880
            },
            "start": {
              "col": 12,
              "line": 23,
              "offset": 877
            }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": {
              "col": 22,
              "line": 18,
              "offset": 600
            },
            "start": {
              "col": 19,
              "line": 18,
              "offset": 597
            }
          },
          "$REQUEST": {
            "abstract_content": "request",
            "end": {
              "col": 37,
              "line": 22,
              "offset": 865
            },
            "start": {
              "col": 30,
              "line": 22,
              "offset": 858
            }
          },
          "$VALUE": {
            "abstract_content": "imageUrl",
            "end": {
              "col": 36,
              "line": 18,
              "offset": 614
            },
            "start": {
              "col": 28,
              "line": 18,
              "offset": 606
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "routes/profileImageUrlUpload.ts",
      "start": {
        "col": 16,
        "line": 23,
        "offset": 881
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
      "end": {
        "col": 57,
        "line": 14,
        "offset": 472
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "params",
              "location": {
                "end": {
                  "col": 19,
                  "line": 10,
                  "offset": 295
                },
                "path": "routes/quarantineServer.ts",
                "start": {
                  "col": 13,
                  "line": 10,
                  "offset": 289
                }
              }
            },
            {
              "content": "file",
              "location": {
                "end": {
                  "col": 15,
                  "line": 11,
                  "offset": 369
                },
                "path": "routes/quarantineServer.ts",
                "start": {
                  "col": 11,
                  "line": 11,
                  "offset": 365
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 57,
                  "line": 14,
                  "offset": 472
                },
                "path": "routes/quarantineServer.ts",
                "start": {
                  "col": 20,
                  "line": 14,
                  "offset": 435
                }
              },
              "path.resolve('ftp/quarantine/', file)"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 19,
                  "line": 10,
                  "offset": 295
                },
                "path": "routes/quarantineServer.ts",
                "start": {
                  "col": 13,
                  "line": 10,
                  "offset": 289
                }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "b63e4f429cf1e1ec583179c073415fef8f2f5962f472dec6d360f25cba12a7a9b9f55a1ded242cfa05827ee23a9d89aafff68d871dd32580e783f6f6d1536c1a_0",
        "is_ignored": false,
        "lines": "      res.sendFile(path.resolve('ftp/quarantine/', file))",
        "message": "The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-73: External Control of File Name or Path"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A04:2021 - Insecure Design"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 22082,
              "rule_id": "j2UzDx",
              "rv_id": 834073,
              "url": "https://semgrep.dev/playground/r/zyTWJ2W/javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
              "version_id": "zyTWJ2W"
            }
          },
          "shortlink": "https://sg.run/7DJk",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-res-sendfile.express-res-sendfile",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "Path Traversal"
          ]
        },
        "metavars": {
          "$1": {
            "abstract_content": "sendFile",
            "end": {
              "col": 9,
              "line": 1,
              "offset": 8
            },
            "start": {
              "col": 1,
              "line": 1,
              "offset": 0
            }
          },
          "$METH": {
            "abstract_content": "sendFile",
            "end": {
              "col": 19,
              "line": 14,
              "offset": 434
            },
            "start": {
              "col": 11,
              "line": 14,
              "offset": 426
            }
          },
          "$NEXT": {
            "abstract_content": "next",
            "end": {
              "col": 58,
              "line": 10,
              "offset": 334
            },
            "start": {
              "col": 54,
              "line": 10,
              "offset": 330
            }
          },
          "$QUERY": {
            "abstract_content": "path.resolve('ftp/quarantine/'file)",
            "end": {
              "col": 57,
              "line": 14,
              "offset": 472
            },
            "start": {
              "col": 20,
              "line": 14,
              "offset": 435
            }
          },
          "$REQ": {
            "abstract_content": "params",
            "end": {
              "col": 19,
              "line": 10,
              "offset": 295
            },
            "start": {
              "col": 13,
              "line": 10,
              "offset": 289
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 42,
              "line": 10,
              "offset": 318
            },
            "start": {
              "col": 39,
              "line": 10,
              "offset": 315
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "routes/quarantineServer.ts",
      "start": {
        "col": 20,
        "line": 14,
        "offset": 435
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal",
      "end": {
        "col": 56,
        "line": 14,
        "offset": 471
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "params",
              "location": {
                "end": {
                  "col": 19,
                  "line": 10,
                  "offset": 295
                },
                "path": "routes/quarantineServer.ts",
                "start": {
                  "col": 13,
                  "line": 10,
                  "offset": 289
                }
              }
            },
            {
              "content": "file",
              "location": {
                "end": {
                  "col": 15,
                  "line": 11,
                  "offset": 369
                },
                "path": "routes/quarantineServer.ts",
                "start": {
                  "col": 11,
                  "line": 11,
                  "offset": 365
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 56,
                  "line": 14,
                  "offset": 471
                },
                "path": "routes/quarantineServer.ts",
                "start": {
                  "col": 52,
                  "line": 14,
                  "offset": 467
                }
              },
              "file"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 19,
                  "line": 10,
                  "offset": 295
                },
                "path": "routes/quarantineServer.ts",
                "start": {
                  "col": 13,
                  "line": 10,
                  "offset": 289
                }
              },
              "params"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "c56fde85159a4267f7b3cb6642b732d750f67ba5e8a4550aa0e9213b802ebf3c27ebd8e6a3183d267eadc3d12749de80ac659ac2d28eabc6b17f92d20307241f_0",
        "is_ignored": false,
        "lines": "      res.sendFile(path.resolve('ftp/quarantine/', file))",
        "message": "Possible writing outside of the destination, make sure that the target path is nested in the intended destination",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A05:2017 - Broken Access Control",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/Path_Traversal"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9273,
              "rule_id": "L1Uyb8",
              "rv_id": 834072,
              "url": "https://semgrep.dev/playground/r/o5TBED2/javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal",
              "version_id": "o5TBED2"
            }
          },
          "shortlink": "https://sg.run/weRn",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express",
            "node.js"
          ],
          "vulnerability_class": [
            "Path Traversal"
          ]
        },
        "metavars": {
          "$NEXT": {
            "abstract_content": "next",
            "end": {
              "col": 58,
              "line": 10,
              "offset": 334
            },
            "start": {
              "col": 54,
              "line": 10,
              "offset": 330
            }
          },
          "$REQ": {
            "abstract_content": "params",
            "end": {
              "col": 19,
              "line": 10,
              "offset": 295
            },
            "start": {
              "col": 13,
              "line": 10,
              "offset": 289
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 42,
              "line": 10,
              "offset": 318
            },
            "start": {
              "col": 39,
              "line": 10,
              "offset": 315
            }
          },
          "$SINK": {
            "abstract_content": "file",
            "end": {
              "col": 56,
              "line": 14,
              "offset": 471
            },
            "propagated_value": {
              "svalue_abstract_content": "params.file",
              "svalue_end": {
                "col": 29,
                "line": 11,
                "offset": 383
              },
              "svalue_start": {
                "col": 18,
                "line": 11,
                "offset": 372
              }
            },
            "start": {
              "col": 52,
              "line": 14,
              "offset": 467
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "routes/quarantineServer.ts",
      "start": {
        "col": 52,
        "line": 14,
        "offset": 467
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-open-redirect.express-open-redirect",
      "end": {
        "col": 25,
        "line": 19,
        "offset": 1062
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "query",
              "location": {
                "end": {
                  "col": 18,
                  "line": 14,
                  "offset": 449
                },
                "path": "routes/redirect.ts",
                "start": {
                  "col": 13,
                  "line": 14,
                  "offset": 444
                }
              }
            },
            {
              "content": "toUrl",
              "location": {
                "end": {
                  "col": 16,
                  "line": 15,
                  "offset": 517
                },
                "path": "routes/redirect.ts",
                "start": {
                  "col": 11,
                  "line": 15,
                  "offset": 512
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 25,
                  "line": 19,
                  "offset": 1062
                },
                "path": "routes/redirect.ts",
                "start": {
                  "col": 20,
                  "line": 19,
                  "offset": 1057
                }
              },
              "toUrl"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 18,
                  "line": 14,
                  "offset": 449
                },
                "path": "routes/redirect.ts",
                "start": {
                  "col": 13,
                  "line": 14,
                  "offset": 444
                }
              },
              "query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "d41f6282eed135404633f9b172ae34b6b783636a9e9999642e5db986f80d77b827c3a67cf9fe9aae749d4f0bdcb63ae1f7743fc1db2162f97aa3ddd63f41fd56_0",
        "is_ignored": false,
        "lines": "      res.redirect(toUrl)",
        "message": "The application redirects to a URL specified by user-supplied input `query` that is not validated. This could redirect users to malicious locations. Consider using an allow-list approach to validate URLs, or warn users they are being redirected to a third-party website.",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 22081,
              "rule_id": "X5ULkq",
              "rv_id": 834071,
              "url": "https://semgrep.dev/playground/r/6xTDg91/javascript.express.security.audit.express-open-redirect.express-open-redirect",
              "version_id": "6xTDg91"
            }
          },
          "shortlink": "https://sg.run/EpoP",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-open-redirect.express-open-redirect",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "Open Redirect"
          ]
        },
        "metavars": {
          "$ASSIGN": {
            "abstract_content": "toUrl",
            "end": {
              "col": 25,
              "line": 19,
              "offset": 1062
            },
            "propagated_value": {
              "svalue_abstract_content": "query.to as string",
              "svalue_end": {
                "col": 45,
                "line": 15,
                "offset": 546
              },
              "svalue_start": {
                "col": 27,
                "line": 15,
                "offset": 528
              }
            },
            "start": {
              "col": 20,
              "line": 19,
              "offset": 1057
            }
          },
          "$NEXT": {
            "abstract_content": "next",
            "end": {
              "col": 50,
              "line": 14,
              "offset": 481
            },
            "start": {
              "col": 46,
              "line": 14,
              "offset": 477
            }
          },
          "$REQ": {
            "abstract_content": "query",
            "end": {
              "col": 32,
              "line": 15,
              "offset": 533
            },
            "start": {
              "col": 27,
              "line": 15,
              "offset": 528
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 10,
              "line": 19,
              "offset": 1047
            },
            "start": {
              "col": 7,
              "line": 19,
              "offset": 1044
            }
          },
          "$VALUE": {
            "abstract_content": "to",
            "end": {
              "col": 35,
              "line": 15,
              "offset": 536
            },
            "start": {
              "col": 33,
              "line": 15,
              "offset": 534
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "routes/redirect.ts",
      "start": {
        "col": 20,
        "line": 19,
        "offset": 1057
      }
    },
    {
      "check_id": "javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
      "end": {
        "col": 159,
        "line": 23,
        "offset": 988
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "criteria",
              "location": {
                "end": {
                  "col": 17,
                  "line": 21,
                  "offset": 689
                },
                "path": "routes/search.ts",
                "start": {
                  "col": 9,
                  "line": 21,
                  "offset": 681
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 159,
                  "line": 23,
                  "offset": 988
                },
                "path": "routes/search.ts",
                "start": {
                  "col": 28,
                  "line": 23,
                  "offset": 857
                }
              },
              "`SELECT * FROM Products WHERE ((name LIKE '%${criteria}%' OR description LIKE '%${criteria}%') AND deletedAt IS NULL) ORDER BY name"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 69,
                  "line": 21,
                  "offset": 741
                },
                "path": "routes/search.ts",
                "start": {
                  "col": 60,
                  "line": 21,
                  "offset": 732
                }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "eec4f3b0e3caf0301754e875531abac913fef9be533240d23947ddebae2d44e701050fe63bd4f09afad7732e717b405cc181a3d00462ca54b871ea1fcd0e5822_0",
        "is_ignored": false,
        "lines": "    models.sequelize.query(`SELECT * FROM Products WHERE ((name LIKE '%${criteria}%' OR description LIKE '%${criteria}%') AND deletedAt IS NULL) ORDER BY name`) // vuln-code-snippet vuln-line unionSqlInjectionChallenge dbSchemaChallenge",
        "message": "Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.",
        "metadata": {
          "category": "security",
          "confidence": "HIGH",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "HIGH",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://sequelize.org/docs/v6/core-concepts/raw-queries/#replacements"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 22085,
              "rule_id": "yyU0GX",
              "rv_id": 834186,
              "url": "https://semgrep.dev/playground/r/w8TAxwx/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
              "version_id": "w8TAxwx"
            }
          },
          "shortlink": "https://sg.run/gjoe",
          "source": "https://semgrep.dev/r/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "SQL Injection"
          ]
        },
        "metavars": {
          "$DB": {
            "abstract_content": "models",
            "end": {
              "col": 11,
              "line": 23,
              "offset": 840
            },
            "start": {
              "col": 5,
              "line": 23,
              "offset": 834
            }
          },
          "$NEXT": {
            "abstract_content": "next",
            "end": {
              "col": 44,
              "line": 20,
              "offset": 652
            },
            "start": {
              "col": 40,
              "line": 20,
              "offset": 648
            }
          },
          "$QUERY": {
            "abstract_content": "`SELECT * FROM Products WHERE ((name LIKE '%criteria%' OR description LIKE '%criteria%') AND deletedAt IS NULL) ORDER BY name",
            "end": {
              "col": 159,
              "line": 23,
              "offset": 988
            },
            "start": {
              "col": 28,
              "line": 23,
              "offset": 857
            }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": {
              "col": 63,
              "line": 21,
              "offset": 735
            },
            "start": {
              "col": 60,
              "line": 21,
              "offset": 732
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 28,
              "line": 20,
              "offset": 636
            },
            "start": {
              "col": 25,
              "line": 20,
              "offset": 633
            }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "routes/search.ts",
      "start": {
        "col": 28,
        "line": 23,
        "offset": 857
      }
    },
    {
      "check_id": "javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
      "end": {
        "col": 82,
        "line": 23,
        "offset": 911
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "criteria",
              "location": {
                "end": {
                  "col": 17,
                  "line": 21,
                  "offset": 689
                },
                "path": "routes/search.ts",
                "start": {
                  "col": 9,
                  "line": 21,
                  "offset": 681
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 82,
                  "line": 23,
                  "offset": 911
                },
                "path": "routes/search.ts",
                "start": {
                  "col": 74,
                  "line": 23,
                  "offset": 903
                }
              },
              "criteria"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 69,
                  "line": 21,
                  "offset": 741
                },
                "path": "routes/search.ts",
                "start": {
                  "col": 60,
                  "line": 21,
                  "offset": 732
                }
              },
              "req.query"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "4b4e1c021f8ce2bd60bed2d5f57f5b48a0e0df974477f72ff837a6b840d86e5e4ade1992276bf4f46dadf6a55de413bca878412a8882bdec471cfeb0cca1d33a_0",
        "is_ignored": false,
        "lines": "    models.sequelize.query(`SELECT * FROM Products WHERE ((name LIKE '%${criteria}%' OR description LIKE '%${criteria}%') AND deletedAt IS NULL) ORDER BY name`) // vuln-code-snippet vuln-line unionSqlInjectionChallenge dbSchemaChallenge",
        "message": "Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using an object-relational mapper (ORM) such as Sequelize which will protect your queries.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "cwe2021-top25": true,
          "cwe2022-top25": true,
          "impact": "MEDIUM",
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://owasp.org/www-community/attacks/SQL_Injection"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 14715,
              "rule_id": "NbUNpr",
              "rv_id": 834108,
              "url": "https://semgrep.dev/playground/r/DkTG0jd/javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "DkTG0jd"
            }
          },
          "shortlink": "https://sg.run/66ZL",
          "source": "https://semgrep.dev/r/javascript.express.security.injection.tainted-sql-string.tainted-sql-string",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "SQL Injection"
          ]
        },
        "metavars": {
          "$1": {
            "abstract_content": "SELECT",
            "end": {
              "col": 7,
              "line": 1,
              "offset": 6
            },
            "start": {
              "col": 1,
              "line": 1,
              "offset": 0
            }
          },
          "$EXPR": {
            "abstract_content": "criteria",
            "end": {
              "col": 82,
              "line": 23,
              "offset": 911
            },
            "start": {
              "col": 74,
              "line": 23,
              "offset": 903
            }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": {
              "col": 63,
              "line": 21,
              "offset": 735
            },
            "start": {
              "col": 60,
              "line": 21,
              "offset": 732
            }
          },
          "$SQLSTR": {
            "abstract_content": "SELECT * FROM Products WHERE ((name LIKE '%",
            "end": {
              "col": 72,
              "line": 23,
              "offset": 901
            },
            "start": {
              "col": 29,
              "line": 23,
              "offset": 858
            }
          }
        },
        "severity": "ERROR",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "routes/search.ts",
      "start": {
        "col": 74,
        "line": 23,
        "offset": 903
      }
    },
    {
      "check_id": "javascript.express.security.express-insecure-template-usage.express-insecure-template-usage",
      "end": {
        "col": 43,
        "line": 56,
        "offset": 2616
      },
      "extra": {
        "dataflow_trace": {
          "intermediate_vars": [
            {
              "content": "loggedInUser",
              "location": {
                "end": {
                  "col": 25,
                  "line": 24,
                  "offset": 886
                },
                "path": "routes/userProfile.ts",
                "start": {
                  "col": 13,
                  "line": 24,
                  "offset": 874
                }
              }
            },
            {
              "content": "user",
              "location": {
                "end": {
                  "col": 60,
                  "line": 26,
                  "offset": 1025
                },
                "path": "routes/userProfile.ts",
                "start": {
                  "col": 56,
                  "line": 26,
                  "offset": 1021
                }
              }
            },
            {
              "content": "template",
              "location": {
                "end": {
                  "col": 19,
                  "line": 47,
                  "offset": 1889
                },
                "path": "routes/userProfile.ts",
                "start": {
                  "col": 11,
                  "line": 47,
                  "offset": 1881
                }
              }
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 43,
                  "line": 56,
                  "offset": 2616
                },
                "path": "routes/userProfile.ts",
                "start": {
                  "col": 22,
                  "line": 56,
                  "offset": 2595
                }
              },
              "pug.compile(template)"
            ]
          ],
          "taint_source": [
            "CliLoc",
            [
              {
                "end": {
                  "col": 71,
                  "line": 24,
                  "offset": 932
                },
                "path": "routes/userProfile.ts",
                "start": {
                  "col": 60,
                  "line": 24,
                  "offset": 921
                }
              },
              "req.cookies"
            ]
          ]
        },
        "engine_kind": "OSS",
        "fingerprint": "991294b6eb598a144349574d0ba9796c68c1a4db1a2c24e484b969a230ed900cb16f4627b84a4cfdcbe8f0c0a1637796d66aa27e934cb77c2a94348604f928ac_0",
        "is_ignored": false,
        "lines": "          const fn = pug.compile(template)",
        "message": "User data from `req` is being compiled into the template, which can lead to a Server Side Template Injection (SSTI) vulnerability.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine"
          ],
          "impact": "MEDIUM",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "MEDIUM",
          "owasp": [
            "A03:2021 - Injection",
            "A01:2017 - Injection"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Injection_Prevention_Cheat_Sheet.html"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 19226,
              "rule_id": "EwUr9k",
              "rv_id": 834097,
              "url": "https://semgrep.dev/playground/r/gETy27Q/javascript.express.security.express-insecure-template-usage.express-insecure-template-usage",
              "version_id": "gETy27Q"
            }
          },
          "shortlink": "https://sg.run/b49v",
          "source": "https://semgrep.dev/r/javascript.express.security.express-insecure-template-usage.express-insecure-template-usage",
          "source_rule_url": [
            "https://github.com/github/codeql/blob/2ba2642c7ab29b9eedef33bcc2b8cd1d203d0c10/javascript/ql/test/query-tests/Security/CWE-094/CodeInjection/template-sinks.js"
          ],
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "javascript",
            "typescript",
            "express",
            "pug",
            "jade",
            "dot",
            "ejs",
            "nunjucks",
            "lodash",
            "handlbars",
            "mustache",
            "hogan.js",
            "eta",
            "squirrelly"
          ],
          "vulnerability_class": [
            "Code Injection"
          ]
        },
        "metavars": {
          "$NEXT": {
            "abstract_content": "next",
            "end": {
              "col": 44,
              "line": 21,
              "offset": 745
            },
            "start": {
              "col": 40,
              "line": 21,
              "offset": 741
            }
          },
          "$PUG": {
            "abstract_content": "pug",
            "end": {
              "col": 25,
              "line": 56,
              "offset": 2598
            },
            "start": {
              "col": 22,
              "line": 56,
              "offset": 2595
            }
          },
          "$REQ": {
            "abstract_content": "req",
            "end": {
              "col": 63,
              "line": 24,
              "offset": 924
            },
            "start": {
              "col": 60,
              "line": 24,
              "offset": 921
            }
          },
          "$RES": {
            "abstract_content": "res",
            "end": {
              "col": 28,
              "line": 21,
              "offset": 729
            },
            "start": {
              "col": 25,
              "line": 21,
              "offset": 726
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "routes/userProfile.ts",
      "start": {
        "col": 22,
        "line": 56,
        "offset": 2595
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing",
      "end": {
        "col": 76,
        "line": 260,
        "offset": 11441
      },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "c2c7cc5931e16da7a7bc9e2fc1e98093f4c2df0159cda8677f10cd4747a7e125dbcf1faf73b825dc6d1908c737a9c354fc272b9f0bb4f3620c4a5909de3fd6be_0",
        "is_ignored": false,
        "lines": "  app.use('/ftp', serveIndexMiddleware, serveIndex('ftp', { icons: true })) // vuln-code-snippet vuln-line directoryListingChallenge",
        "message": "Directory listing/indexing is enabled, which may lead to disclosure of sensitive directories and files. It is recommended to disable directory listing unless it is a public resource. If you need directory listing, ensure that sensitive files are inaccessible when querying the resource.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-548: Exposure of Information Through Directory Listing"
          ],
          "impact": "MEDIUM",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A06:2017 - Security Misconfiguration",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://www.npmjs.com/package/serve-index",
            "https://www.acunetix.com/blog/articles/directory-listing-information-disclosure/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 22552,
              "rule_id": "x8UqEb",
              "rv_id": 834060,
              "url": "https://semgrep.dev/playground/r/GxTDEXG/javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing",
              "version_id": "GxTDEXG"
            }
          },
          "shortlink": "https://sg.run/DX2G",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "Mishandled Sensitive Information"
          ]
        },
        "metavars": {
          "$APP": {
            "abstract_content": "app",
            "end": {
              "col": 6,
              "line": 260,
              "offset": 11371
            },
            "propagated_value": {
              "svalue_abstract_content": "express()",
              "svalue_end": {
                "col": 22,
                "line": 105,
                "offset": 4885
              },
              "svalue_start": {
                "col": 13,
                "line": 105,
                "offset": 4876
              }
            },
            "start": {
              "col": 3,
              "line": 260,
              "offset": 11368
            }
          },
          "$SERVEINDEX": {
            "abstract_content": "serveIndex",
            "end": {
              "col": 51,
              "line": 260,
              "offset": 11416
            },
            "start": {
              "col": 41,
              "line": 260,
              "offset": 11406
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "server.ts",
      "start": {
        "col": 3,
        "line": 260,
        "offset": 11368
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing",
      "end": {
        "col": 109,
        "line": 264,
        "offset": 11833
      },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "c2c7cc5931e16da7a7bc9e2fc1e98093f4c2df0159cda8677f10cd4747a7e125dbcf1faf73b825dc6d1908c737a9c354fc272b9f0bb4f3620c4a5909de3fd6be_1",
        "is_ignored": false,
        "lines": "  app.use('/.well-known', serveIndexMiddleware, serveIndex('.well-known', { icons: true, view: 'details' }))",
        "message": "Directory listing/indexing is enabled, which may lead to disclosure of sensitive directories and files. It is recommended to disable directory listing unless it is a public resource. If you need directory listing, ensure that sensitive files are inaccessible when querying the resource.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-548: Exposure of Information Through Directory Listing"
          ],
          "impact": "MEDIUM",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A06:2017 - Security Misconfiguration",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://www.npmjs.com/package/serve-index",
            "https://www.acunetix.com/blog/articles/directory-listing-information-disclosure/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 22552,
              "rule_id": "x8UqEb",
              "rv_id": 834060,
              "url": "https://semgrep.dev/playground/r/GxTDEXG/javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing",
              "version_id": "GxTDEXG"
            }
          },
          "shortlink": "https://sg.run/DX2G",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "Mishandled Sensitive Information"
          ]
        },
        "metavars": {
          "$APP": {
            "abstract_content": "app",
            "end": {
              "col": 6,
              "line": 264,
              "offset": 11730
            },
            "propagated_value": {
              "svalue_abstract_content": "express()",
              "svalue_end": {
                "col": 22,
                "line": 105,
                "offset": 4885
              },
              "svalue_start": {
                "col": 13,
                "line": 105,
                "offset": 4876
              }
            },
            "start": {
              "col": 3,
              "line": 264,
              "offset": 11727
            }
          },
          "$SERVEINDEX": {
            "abstract_content": "serveIndex",
            "end": {
              "col": 59,
              "line": 264,
              "offset": 11783
            },
            "start": {
              "col": 49,
              "line": 264,
              "offset": 11773
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "server.ts",
      "start": {
        "col": 3,
        "line": 264,
        "offset": 11727
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing",
      "end": {
        "col": 115,
        "line": 268,
        "offset": 12049
      },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "c2c7cc5931e16da7a7bc9e2fc1e98093f4c2df0159cda8677f10cd4747a7e125dbcf1faf73b825dc6d1908c737a9c354fc272b9f0bb4f3620c4a5909de3fd6be_2",
        "is_ignored": false,
        "lines": "  app.use('/encryptionkeys', serveIndexMiddleware, serveIndex('encryptionkeys', { icons: true, view: 'details' }))",
        "message": "Directory listing/indexing is enabled, which may lead to disclosure of sensitive directories and files. It is recommended to disable directory listing unless it is a public resource. If you need directory listing, ensure that sensitive files are inaccessible when querying the resource.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-548: Exposure of Information Through Directory Listing"
          ],
          "impact": "MEDIUM",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A06:2017 - Security Misconfiguration",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://www.npmjs.com/package/serve-index",
            "https://www.acunetix.com/blog/articles/directory-listing-information-disclosure/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 22552,
              "rule_id": "x8UqEb",
              "rv_id": 834060,
              "url": "https://semgrep.dev/playground/r/GxTDEXG/javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing",
              "version_id": "GxTDEXG"
            }
          },
          "shortlink": "https://sg.run/DX2G",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "Mishandled Sensitive Information"
          ]
        },
        "metavars": {
          "$APP": {
            "abstract_content": "app",
            "end": {
              "col": 6,
              "line": 268,
              "offset": 11940
            },
            "propagated_value": {
              "svalue_abstract_content": "express()",
              "svalue_end": {
                "col": 22,
                "line": 105,
                "offset": 4885
              },
              "svalue_start": {
                "col": 13,
                "line": 105,
                "offset": 4876
              }
            },
            "start": {
              "col": 3,
              "line": 268,
              "offset": 11937
            }
          },
          "$SERVEINDEX": {
            "abstract_content": "serveIndex",
            "end": {
              "col": 62,
              "line": 268,
              "offset": 11996
            },
            "start": {
              "col": 52,
              "line": 268,
              "offset": 11986
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "server.ts",
      "start": {
        "col": 3,
        "line": 268,
        "offset": 11937
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing",
      "end": {
        "col": 103,
        "line": 272,
        "offset": 12297
      },
      "extra": {
        "engine_kind": "OSS",
        "fingerprint": "c2c7cc5931e16da7a7bc9e2fc1e98093f4c2df0159cda8677f10cd4747a7e125dbcf1faf73b825dc6d1908c737a9c354fc272b9f0bb4f3620c4a5909de3fd6be_3",
        "is_ignored": false,
        "lines": "  app.use('/support/logs', serveIndexMiddleware, serveIndex('logs', { icons: true, view: 'details' })) // vuln-code-snippet vuln-line accessLogDisclosureChallenge",
        "message": "Directory listing/indexing is enabled, which may lead to disclosure of sensitive directories and files. It is recommended to disable directory listing unless it is a public resource. If you need directory listing, ensure that sensitive files are inaccessible when querying the resource.",
        "metadata": {
          "category": "security",
          "confidence": "MEDIUM",
          "cwe": [
            "CWE-548: Exposure of Information Through Directory Listing"
          ],
          "impact": "MEDIUM",
          "interfile": true,
          "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
          "likelihood": "HIGH",
          "owasp": [
            "A06:2017 - Security Misconfiguration",
            "A01:2021 - Broken Access Control"
          ],
          "references": [
            "https://www.npmjs.com/package/serve-index",
            "https://www.acunetix.com/blog/articles/directory-listing-information-disclosure/"
          ],
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 22552,
              "rule_id": "x8UqEb",
              "rv_id": 834060,
              "url": "https://semgrep.dev/playground/r/GxTDEXG/javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing",
              "version_id": "GxTDEXG"
            }
          },
          "shortlink": "https://sg.run/DX2G",
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing",
          "subcategory": [
            "vuln"
          ],
          "technology": [
            "express"
          ],
          "vulnerability_class": [
            "Mishandled Sensitive Information"
          ]
        },
        "metavars": {
          "$APP": {
            "abstract_content": "app",
            "end": {
              "col": 6,
              "line": 272,
              "offset": 12200
            },
            "propagated_value": {
              "svalue_abstract_content": "express()",
              "svalue_end": {
                "col": 22,
                "line": 105,
                "offset": 4885
              },
              "svalue_start": {
                "col": 13,
                "line": 105,
                "offset": 4876
              }
            },
            "start": {
              "col": 3,
              "line": 272,
              "offset": 12197
            }
          },
          "$SERVEINDEX": {
            "abstract_content": "serveIndex",
            "end": {
              "col": 60,
              "line": 272,
              "offset": 12254
            },
            "start": {
              "col": 50,
              "line": 272,
              "offset": 12244
            }
          }
        },
        "severity": "WARNING",
        "validation_state": "NO_VALIDATOR"
      },
      "path": "server.ts",
      "start": {
        "col": 3,
        "line": 272,
        "offset": 12197
      }
    }
  ],
  "skipped_rules": [],
  "version": "1.90.0"
}
